# source("scripts/simulation.R")
source("scripts/simulation_par.R")
}
library(maps)
library(mapdata)
install.packages(c("mapdata", "maptools", "sp", "ggmap", "ggsn"))
library(maps)
library(mapdata)
library(maptools)
library(sp)
library(ggmap)
library(ggsn)
install.packages("ggsn")
map.1<- get_map(location = c(-70.619, 42.9842, -70.6093, 42.993), zoom = 16, source = "osm")
map.1<- get_map(location = c(-70.619, 42.9842, -70.6093, 42.993), zoom = 16)
gg <- ggplot()+theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
gg = gg + ggtitle(label="Test map")
gg <- gg + geom_map(data=map.1, map=map.1)
qmap("Cornell University")
x11()
qmap("Cornell University")
qmap("Ithaca New York")
qmap("Ithaca New York",zoom=10)
qmap("Ithaca New York",zoom=20)
qmap("Ithaca New York",zoom=15)
qmap("Ithaca New York",zoom=12)
ggplot(map.1)
map.1<- get_map(location = c(-70.619, 42.9842, -70.6093, 42.993), zoom = 16)
ggplot(map.1)
map.1<- get_map(location = c(-70.619, 42.9842, -70.6093, 42.993), zoom = 12)
ggplot(map.1)
qmap("Ithaca New York",zoom=12)
gglocator(2)
x11()
qmap("Ithaca New York",zoom=12)
gglocator(2)
gglocator(2)
?geolocator
?gglocator
interactive()
gglocator(1)
gglocator(n=1)
plot(x=c(0,1),y=c(0,1))
gglocator(n=1)
library(ggplot2)
gglocator(n=1)
world = map_data("world")
gg <- ggplot()+theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
gg = gg + ggtitle(label="Women's march 1/21/17",subtitle="graphic by Collin Edwards")
gg <- gg + geom_map(data=world, map=world,
aes(map_id=region, color="blue"),
color="white", fill="#7f7f7f", size=0.05, alpha=1/4)
# gg <- gg + geom_path(data=raw,
# aes(x=longitude, y=latitude),
gg <- gg + geom_point(data=raw,
aes(x=longitude, y=latitude),
size=2, alpha=.5,color="deeppink")
gg
setwd("F:/Dropbox/Grad school/research projects/womens march graphic")
library(rworldmap)
require(ggplot2)
require(ggthemes)
x11()
# raw=read.csv("womens march latlong.csv")
raw=read.csv("longlats.txt")
# dat=read.csv("womens march 1-21-17 crowd size.csv")
# datnames=as.character(dat$X)
# write.csv(datnames[!(datnames %in% raw$name)],file = "missing.csv")
# newmap <- getMap(resolution = "low")
# plot(newmap,asp = 1)
# # points(raw$longitude, raw$latitude, col = "black", cex = 1.6, pch=16)
# points(raw$longitude, raw$latitude, col = "deeppink", cex = 1.5, pch=16)
world = map_data("world")
gg <- ggplot()+theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
gg = gg + ggtitle(label="Women's march 1/21/17",subtitle="graphic by Collin Edwards")
gg <- gg + geom_map(data=world, map=world,
aes(map_id=region, color="blue"),
color="white", fill="#7f7f7f", size=0.05, alpha=1/4)
# gg <- gg + geom_path(data=raw,
# aes(x=longitude, y=latitude),
# size=1, alpha=1,color="pink")
gg <- gg + geom_point(data=raw,
aes(x=longitude, y=latitude),
size=2, alpha=.5,color="deeppink")
gg
gglocator(2)
mmap<- get_map(location = c(-70.619, 42.9842, -70.6093, 42.993), zoom = 12)
mmap<- get_map(location = c(-70.619, 42.9842, -70.6093, 42.993), zoom = 12,source="google")
newmap= ggmap(mmap)
newmap
mmap<- get_map(location = c(-70.619, 42.9842, -70.6093, 42.993), zoom = 14,source="google")
newmap= ggmap(mmap)
newmap
gglocator(2)
res=gglocator(2)
res
res=gglocator(2)
res
res=gglocator(2)
res
res=gglocator(2)
res
?get_map
home=get_map(location = c(lon=39.065819,lat=-120.937932),zoom=16,maptype="terrain")
home=get_map(location = c(lat=39.065819,lon=-120.937932),zoom=16,maptype="terrain")
ggmap(home)
home=get_map(location = c(lat=39.065819,lon=-120.937932),zoom=15,maptype="terrain")
ggmap(home)
home=get_map(location = c(lat=39.065819,lon=-120.937932),zoom=15,maptype="satellite")
ggmap(home)
ghome=ggmap(home)
ghome=ghome+geom_point(dat=house,
aes(x=house$lat,y=house$lon),
color="blue")
ghome()
ghome=ggmap(home)
ghome=ghome+geom_point(dat=house,
aes(x=house$lat,y=house$lon),
color="blue")
house=cbind(lat=39.065414,lon=-120.939248)
ghome=ggmap(home)
ghome=ghome+geom_point(dat=house,
aes(x=house$lat,y=house$lon),
color="blue")
house=data.frame(lat=39.065414,lon=-120.939248)
ghome=ggmap(home)
ghome=ghome+geom_point(dat=house,
aes(x=house$lat,y=house$lon),
color="blue")
ghome()
ghome
home=get_map(location = c(lat=39.065819,lon=-120.937932),zoom=15,maptype="terrain")
house=data.frame(lat=39.065414,lon=-120.939248)
ghome=ggmap(home)
ghome=ghome+geom_point(dat=house,
aes(x=house$lat,y=house$lon),
color="blue")
ghome
ghome=ggmap(home)
ghome=ghome+geom_point(dat=house,
aes(x=house$lon,y=house$lat),
color="blue")
ghome
ghome=ggmap(home)
ghome=ghome+geom_point(dat=house,
aes(x=house$lon,y=house$lat),
color="blue",size=2)
ghome
ghome=ggmap(home)
ghome=ghome+geom_point(dat=house,
aes(x=house$lon,y=house$lat),
color="blue",size=4)
ghome
home=get_map(location = c(lat=39.065819,lon=-120.937932),zoom=14,maptype="terrain")
house=data.frame(lat=39.065414,lon=-120.939248)
ghome=ggmap(home)
ghome=ghome+geom_point(dat=house,
aes(x=house$lon,y=house$lat),
color="blue",size=4)
ghome
x11()
qmap("Scotland",zoom=12)
qmap("Scotland")
qmap("Scotland", scale=4)
qmap("Scotland", zoom=4)
qmap("Scotland", zoom=8)
qmap("Scotland", zoom=6)
qmap("Scotland", zoom=7)
mmap<- get_map(location = c(-70.619, 42.9842, -70.6093, 42.993), zoom = 14,source="google")
newmap= ggmap(mmap)
newmap
home=get_map(location = c(lat=39.065819,lon=-120.937932),zoom=14,maptype="terrain")
house=data.frame(lat=39.065414,lon=-120.939248)
ghome=ggmap(home)
ghome=ghome+geom_point(dat=house,
aes(x=house$lon,y=house$lat),
color="blue",size=4)
home=get_map(location = c(lat=39.065819,lon=-120.937932),zoom=14,maptype="terrain")
house=data.frame(lat=39.065414,lon=-120.939248)
ghome=ggmap(home)
ghome=ghome+geom_point(dat=house,
aes(x=house$lon,y=house$lat),
color="blue",size=4)
ghome
mmap<- get_map(location = c(-70.619, 42.9842, -70.6093, 42.993), zoom = 14,source="google")
newmap= ggmap(mmap)
newmap
home=get_map(location = c(lat=39.065819,lon=-120.937932),zoom=14,maptype="terrain")
house=data.frame(lat=39.065414,lon=-120.939248)
ghome=ggmap(home)
ghome=ghome+geom_point(dat=house,
aes(x=house$lon,y=house$lat),
color="blue",size=4)
ghome
home=get_map(location = c(lat=39.065819,lon=-120.937932),zoom=15,maptype="satellite")
ggmap(home)
home=get_map(location = c(lat=39.065819,lon=-120.937932),zoom=14,maptype="terrain")
house=data.frame(lat=39.065414,lon=-120.939248)
ghome=ggmap(home)
ghome=ghome+geom_point(dat=house,
aes(x=house$lon,y=house$lat),
color="blue",size=4)
ghome
shome=get_map(location = c(lat=39.065819,lon=-120.937932),zoom=15,maptype="satellite")
ggmap(shome)
shome=get_map(location = c(lat=39.065819,lon=-120.937932),zoom=14,maptype="satellite")
ggmap(shome)
setwd("F:/Dropbox/Grad school/research projects/womens march graphic")
library(rworldmap)
require(ggplot2)
require(ggthemes)
x11()
windows()
raw=read.csv("longlats.txt")
head(raw)
head(raw)
setwd("F:/Dropbox/Grad school/research projects/womens march graphic")
library(rworldmap)
require(ggplot2)
require(ggthemes)
x11()
# raw=read.csv("womens march latlong.csv")
raw=read.csv("longlats.txt")
hi=10
low=4
min(hi,low)
world = map_data("world")
?map_data
maptype="world"
world = map_data(maptype)
gg <- ggplot()+theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
gg = gg + ggtitle(label="Women's march 1/21/17",subtitle="graphic by Collin Edwards")
?geom_map
gg <- ggplot()+theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
gg <- gg + ggtitle(label="Women's march 1/21/17",subtitle="graphic by Collin Edwards")
gg <- gg + geom_map(data=world, map=world,
aes(map_id=region, color="blue"),
color="white", fill="#7f7f7f", size=0.05, alpha=1/4)
gg
x11()
maptype="world"
world = map_data(maptype)
gg <- ggplot()+theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
gg <- gg + ggtitle(label="Women's march 1/21/17",subtitle="graphic by Collin Edwards")
gg <- gg + geom_map(data=world, map=world,
aes(map_id=region, color="blue"),
color="white", fill="#7f7f7f", size=0.05, alpha=1/4)
gg
world = map_data(maptype)
gg <- ggplot()+theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
gg <- gg + ggtitle(label="Women's march 1/21/17",subtitle="graphic by Collin Edwards")
gg <- gg + geom_map(data=world, map=world,
aes(map_id=region, color="blue"),
color="white", fill="#7f7f7f", size=0.05, alpha=1/4)
# gg <- gg + geom_path(data=raw,
# aes(x=longitude, y=latitude),
# size=1, alpha=1,color="pink")
gg <- gg + geom_point(data=raw,
aes(x=longitude, y=latitude),
size=2, alpha=.5,color="deeppink")
gg
gg <- ggplot()+theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
gg <- gg + ggtitle(label="Women's march 1/21/17",subtitle="graphic by Collin Edwards")
gg <- gg + geom_map(data=world, map=world,
aes(map_id=region, color="blue"),
color="white", fill="#7f7f7f", size=0.05, alpha=1/4)
# gg <- gg + geom_path(data=raw,
# aes(x=longitude, y=latitude),
# size=1, alpha=1,color="pink")
gg + geom_point(data=raw,
aes(x=longitude, y=latitude),
size=2, alpha=.5,color="deeppink")
library(maps)
library(mapdata)
library(maptools)
library(sp)
library(ggplot2)
library(ggmap)
library(ggsn)
mmap<- get_map(location = c(-70.619, 42.9842, -70.6093, 42.993), zoom = 14,source="google")
newmap= ggmap(mmap)
newmap
home=get_map(location = c(lat=39.065819,lon=-120.937932),zoom=14,maptype="terrain")
house=data.frame(lat=39.065414,lon=-120.939248)
ghome=ggmap(home)
ghome=ghome+geom_point(dat=house,
aes(x=house$lon,y=house$lat),
color="blue",size=4)
ghome
shome=get_map(location = "Scotland",zoom=14,maptype="satellite")
ggmap(shome)
shome=get_map(location = "Scotland",zoom=7,maptype="satellite")
ggmap(shome)
shome=get_map(location = "Scotland",zoom=7,maptype="terrain")
ggmap(shome)
?get_map
shome=get_map(location = "Scotland",zoom=7,maptype="roadmap")
ggmap(shome)
shome=get_map(location = "Scotland",zoom=7,maptype="toner")
ggmap(shome)
shome=get_map(location = "Scotland",zoom=7,maptype="terrain-lines")
ggmap(shome)
shome=get_map(location = "Scotland",zoom=7,maptype="terrain-labels")
ggmap(shome)
shome=get_map(location = "Scotland",zoom=7,maptype="watercolor")
ggmap(shome)
shome=get_map(location = "Scotland",zoom=7,maptype="terrain")
ggmap(shome)
shome=get_map(location = "Celbridge Ireland",zoom=7,maptype="terrain")
ggmap(shome)
shome=get_map(location = "Kildare Ireland",zoom=7,maptype="terrain")
ggmap(shome)
shome=get_map(location = "Kildare, Ireland",zoom=7,maptype="terrain")
ggmap(shome)
shome=get_map(location = "Colfax California",zoom=7,maptype="terrain")
ggmap(shome)
shome=get_map(location = "Auburn California",zoom=7,maptype="terrain")
ggmap(shome)
shome=get_map(location = "Auburn California",zoom=17,maptype="terrain")
ggmap(shome)
shome=get_map(location = "Kildare Ireland",zoom=12,maptype="terrain")
ggmap(shome)
shome=get_map(location = "Celbridge Ireland",zoom=12,maptype="terrain")
ggmap(shome)
shome=get_map(location = "Celbridge Ireland",zoom=14,maptype="satellite")
ggmap(shome)
shome=get_map(location = "Celbridge Ireland",zoom=16,maptype="satellite")
ggmap(shome)
shome=get_map(location = "Celbridge Ireland",zoom=15,maptype="satellite")
ggmap(shome)
shome=get_map(location = c(-6.544,53.346),zoom=17,maptype="satellite")
ggmap(shome)
shome=get_map(location = c(-6.542,53.346),zoom=17,maptype="satellite")
ggmap(shome)
shome=get_map(location = c(-6.542,53.346),zoom=18,maptype="satellite")
ggmap(shome)
shome=get_map(location = c(-6.542.5,53.3465),zoom=18,maptype="satellite")
ggmap(shome)
shome=get_map(location = c(-6.5425,53.3465),zoom=18,maptype="satellite")
ggmap(shome)
shome=get_map(location = c(-6.5425,53.3465),zoom=19,maptype="satellite")
ggmap(shome)
shome=get_map(location = "Celbridge Ireland",zoom=15,maptype="satellite")
ggmap(shome)
shome=get_map(location = c(-6.5425,53.3465),zoom=19,maptype="satellite")
ggmap(shome)
gg=ggmap(shome)
shome=get_map(location = c(-6.5425,53.3465),zoom=21,maptype="satellite")
ggmap(shome)
shome=get_map(location = c(-6.5425,53.3465),zoom=20,maptype="satellite")
ggmap(shome)
shome=get_map(location = c(-6.54225,53.3465),zoom=20,maptype="satellite")
ggmap(shome)
shome=get_map(location = c(-6.54225,53.3465),zoom=18,maptype="satellite")
ggmap(shome)
shome=get_map(location = c(-6.54225,53.3465),zoom=19,maptype="satellite")
ggmap(shome)
home=get_map(location = c(lat=39.065819,lon=-120.937932),zoom=14,maptype="terrain")
house=data.frame(lat=39.065414,lon=-120.939248)
ghome=ggmap(home)
ghome=ghome+geom_point(dat=house,
aes(x=house$lon,y=house$lat),
color="blue",size=4)
ghome
home=get_map(location = house,zoom=14,maptype="terrain")
ggmap(home)
home=get_map(location = house,zoom=14,maptype="satellite")
ggmap(home)
home=get_map(location = house,zoom=15,maptype="satellite")
ggmap(home)
home=get_map(location = house,zoom=12,maptype="satellite")
ggmap(home)
home=get_map(location = house,zoom=13,maptype="satellite")
ggmap(home)
home=get_map(location = house,zoom=14,maptype="satellite")
ggmap(home)
home=get_map(location = house,zoom=17,maptype="satellite")
ggmap(home)
home=get_map(location = house,zoom=18,maptype="satellite")
ggmap(home)
davis=get_map(location = "Davis California",zoom=18,maptype="satellite")
ggmap(home)
ggmap(davis)
davis=get_map(location = "Davis California",zoom=14,maptype="satellite")
ggmap(davis)
davis=get_map(location = "Davis California",zoom=13,maptype="satellite")
ggmap(davis)
davis=get_map(location = "Sacramento California",zoom=12,maptype="satellite")
ggmap(davis)
davis=get_map(location = "San Francisco California",zoom=11,maptype="satellite")
ggmap(davis)
davis=get_map(location = "San Francisco California",zoom=10,maptype="terrain")
ggmap(davis)
source('F:/Dropbox/Grad school/example R code/mapmaking.R', echo=TRUE)
davis=get_map(location = "San Francisco California",zoom=10,maptype="satellite")
ggmap(davis)
shome=get_map(location = "Celbridge Ireland",zoom=15,maptype="satellite")
shome=get_map(location = c(-6.54225,53.3465),zoom=19,maptype="satellite")
ggmap(shome)
shome=get_map(location = c(-6.54225,53.3465),zoom=20,maptype="satellite")
ggmap(shome)
shome=get_map(location = c(-6.54225,53.3467),zoom=20,maptype="satellite")
ggmap(shome)
setwd("F:/Dropbox/Grad school/research projects/womens march graphic")
library(rworldmap)
require(ggplot2)
require(ggthemes)
x11()
# raw=read.csv("womens march latlong.csv")
raw=read.csv("longlats.txt")
# dat=read.csv("womens march 1-21-17 crowd size.csv")
# datnames=as.character(dat$X)
# write.csv(datnames[!(datnames %in% raw$name)],file = "missing.csv")
# newmap <- getMap(resolution = "low")
# plot(newmap,asp = 1)
# # points(raw$longitude, raw$latitude, col = "black", cex = 1.6, pch=16)
# points(raw$longitude, raw$latitude, col = "deeppink", cex = 1.5, pch=16)
maptype="world"
world = map_data(maptype)
gg <- ggplot()+theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
gg <- gg + ggtitle(label="Women's march 1/21/17",subtitle="graphic by Collin Edwards")
gg <- gg + geom_map(data=world, map=world,
aes(map_id=region, color="blue"),
color="white", fill="#7f7f7f", size=0.05, alpha=1/4)
# gg <- gg + geom_path(data=raw,
# aes(x=longitude, y=latitude),
# size=1, alpha=1,color="pink")
gg = gg + geom_point(data=raw,
aes(x=longitude, y=latitude),
size=2, alpha=.5,color="deeppink")
gg
setwd("F:/Dropbox/Grad school/example R code")
rm(list=ls())
set_wrkdir<-function(){
#function for setting working directory to the right place given the current computer/user
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin" || Sys.getenv("USERNAME")=="Collin.work"){ #If it's collin
if(Sys.info()["nodename"]=="DESKTOP-D6QSU8F"){
setwd("G:\\Repos\\phenology-cues") #desktop
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #laptop
}
}
set_wrkdir()
runsname="rapidcity-stand-gauss"
rm(list=setdiff(ls(), c("set_wrkdir","runsname","runsname.old","runsnames.first","runsname.second","runsnames","start.time")))
follow.run=FALSE
require(timeDate)
require(zoo)
#Set appropriate working directory
set_wrkdir()
#Load sources file(s)
source("scripts/windows_subs.R")
###############################
set_wrkdir()
source(paste("parameters/",runsname,".R",sep="")) #read in all the parameters
#reading in fitness shape file
source(paste("fitcurve/",fitshape,".R",sep=""))
years.list=NULL
if(runType=="unitTestConst"){
out=yeargen.const(numYears)
years.list=out[["years.list"]]
years.index=rep(1,numYears)
} else if (runType=="unitTestRand"){
out=yeargen.rand(numYears)
years.list=out[["years.list"]]
} else{
years.stuff=yeargen(dat.file=runType, fit.parms=fit.parms,
baseTemp=baseTemp,
other.name=other.name,
decay=decay,
moist.norm=moist.norm)
years.list=years.stuff[[1]]
years.indlist=years.stuff[[2]]
}
#setting up all the mutation rates etc
source("scripts/rate_setup.R")  #this sets up mutation rates, distances, etc.
#Setting up year generation
#check to see if there is a set of years already generated with the appropriate name
# This will let us compare different runs across the same set of years.
set_wrkdir()
years.name=paste(runType,"-yearsmat-",yearSet,"-nyrs",numYears,"-nsims",numsims,"-label_",yearLabel,".csv",sep="")
years.indmat=read.csv(paste("yearinds/",years.name,sep=""),header=TRUE)
if(file.exists(paste("yearinds/",years.name,sep=""))){
}else{
years.indmat=matrix(sample(years.indlist,size=numYears*numsims,replace=TRUE),ncol=numYears,nrow=numsims) # This is the list of which year.list data to use for each generation of the model
write.csv(years.indmat,paste("yearinds/",years.name,sep=""),row.names=FALSE)
}
sds
