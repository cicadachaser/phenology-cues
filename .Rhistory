names(varcompare)[4:6]=c("geofit.old","geofit.new","traitval.new")
varcompare=cbind(varcompare,res.diff=varcompare$geofit.old+varcompare$geofit.new)
varcompare$geofit.old=-varcompare$geofit.old
varcompare=cbind(varcompare,frac.diff=varcompare$res.diff/mean(varcompare$geofit.old+varcompare$geofit.new))
names(varcompare)[8]="frac.diff"
set_wrkdir()
save(varcompare,file="varCompare_2yr.Rdata")
#Are the two lists of years identical
identical(opt$yearlistlist,brute$yearlistlist)
for(i in 1:length(opt$yearlistlist)){
for(j in 1:length(opt$yearlistlist[[1]])){
testopt=opt$yearlistlist[[i]][[j]]
testbrute=brute$yearlistlist[[i]][[j]]
print(identical(testopt,testbrute))
}
}
varcompare
dim(varcompare)
varcompare[,c(1:3,7,8)]
varcompare[,"res.diff"]
which(abs(varcompare[,"res.diff"])>10^-10)
varcompare[which(abs(varcompare[,"res.diff"])>10^-10),]
#seeing if the new method gives us the same fitness that the old method does
set_wrkdir<-function(){
#function for setting working directory to the right place given the current computer/user
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin" || Sys.getenv("USERNAME")=="Collin.work"){ #If it's collin
if(Sys.info()["nodename"]=="DESKTOP-D6QSU8F"){
setwd("G:\\Repos\\phenology-cues") #desktop
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #laptop
}
}
set_wrkdir()
setwd("results/fig1/compare3-2yr")
load("fig1dat-versioncompare3-2yr.Rdata",envir=brute<-new.env())
set_wrkdir()
source("scripts/var_exper/runfiles/compare1-10yr.R") #call the runFile which as all the variables defined
mutdist=0 #to avoid error in the part of rate_setup.R that we're not using
source("scripts/rate_setup.R")
source("scripts/windows_subs.R")
yrstdmat=matrix(seq(0,yearstdMax,length=numpts),ncol=numpts,nrow=numpts,byrow = TRUE)
daystdmat=matrix(seq(0,daystdMax,length=numpts),ncol=numpts,nrow=numpts,byrow = FALSE)
yearstds=yrstdmat[1:(numpts^2)]
daystds=daystdmat[1:(numpts^2)]
oldnewfit=rep(0,dim(varcompare)[1])
for(i.test in 1:dim(varcompare)[1]){
curline=varcompare[i.test,]
listlistind=which(yearstds==curline$yearstd &daystds==curline$daystd)
years.list=brute$yearlistlist[[listlistind]]
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=0
# start with traits = 0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
# create "empty" individual
b.traits=sprintf("b.%s",curline$trait)  # list of traits in b.day format
indiv[b.traits]=curline$traitval.new #fill in the values for the traits we're actually using
yrfit=rep(0,length(years.list)) #initialize vector for storing yearly fitness
for(i in 1:length(years.list)){ #iterate through all years, calculate fitness for each
yrfit[i]=fitness(year=years.list[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
oldnewfit[i.test]=sum(log(yrfit+.Machine$double.eps))
}
length(years.list)
i.test=1
curline=varcompare[i.test,]
listlistind=which(yearstds==curline$yearstd &daystds==curline$daystd)
years.list=brute$yearlistlist[[listlistind]]
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=0
# start with traits = 0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
# create "empty" individual
b.traits=sprintf("b.%s",curline$trait)  # list of traits in b.day format
indiv[b.traits]=curline$traitval.new #fill in the values for the traits we're actually using
yrfit=rep(0,length(years.list)) #initialize vector for storing yearly fitness
for(i in 1:length(years.list)){ #iterate through all years, calculate fitness for each
yrfit[i]=fitness(year=years.list[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
oldnewfit[i.test]=sum(log(yrfit+.Machine$double.eps))
dim(varcompare)
oldnewfit=rep(0,dim(varcompare)[1])
for(i.test in 1:dim(varcompare)[1]){
curline=varcompare[i.test,]
listlistind=which(yearstds==curline$yearstd &daystds==curline$daystd)
years.list=brute$yearlistlist[[listlistind]]
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=0
# start with traits = 0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
# create "empty" individual
b.traits=sprintf("b.%s",curline$trait)  # list of traits in b.day format
indiv[b.traits]=curline$traitval.new #fill in the values for the traits we're actually using
yrfit=rep(0,length(years.list)) #initialize vector for storing yearly fitness
for(i in 1:length(years.list)){ #iterate through all years, calculate fitness for each
yrfit[i]=fitness(year=years.list[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
oldnewfit[i.test]=sum(log(yrfit+.Machine$double.eps))
}
listlistind
yearstids
yearstds
numpts
setwd("results/fig1/compare3-2yr")
load("fig1dat-versioncompare3-2yr.Rdata",envir=brute<-new.env())
numpts=brute$numpts
set_wrkdir()
source("scripts/var_exper/runfiles/compare1-10yr.R") #call the runFile which as all the variables defined
mutdist=0 #to avoid error in the part of rate_setup.R that we're not using
source("scripts/rate_setup.R")
source("scripts/windows_subs.R")
yrstdmat=matrix(seq(0,yearstdMax,length=numpts),ncol=numpts,nrow=numpts,byrow = TRUE)
daystdmat=matrix(seq(0,daystdMax,length=numpts),ncol=numpts,nrow=numpts,byrow = FALSE)
yearstds=yrstdmat[1:(numpts^2)]
daystds=daystdmat[1:(numpts^2)]
oldnewfit=rep(0,dim(varcompare)[1])
for(i.test in 1:dim(varcompare)[1]){
curline=varcompare[i.test,]
listlistind=which(yearstds==curline$yearstd &daystds==curline$daystd)
years.list=brute$yearlistlist[[listlistind]]
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=0
# start with traits = 0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
# create "empty" individual
b.traits=sprintf("b.%s",curline$trait)  # list of traits in b.day format
indiv[b.traits]=curline$traitval.new #fill in the values for the traits we're actually using
yrfit=rep(0,length(years.list)) #initialize vector for storing yearly fitness
for(i in 1:length(years.list)){ #iterate through all years, calculate fitness for each
yrfit[i]=fitness(year=years.list[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
oldnewfit[i.test]=sum(log(yrfit+.Machine$double.eps))
}
numpts
brute$numpts
set_wrkdir()
source("scripts/var_exper/runfiles/compare3-2yr.R") #call the runFile which as all the variables defined
mutdist=0 #to avoid error in the part of rate_setup.R that we're not using
source("scripts/rate_setup.R")
source("scripts/windows_subs.R")
yrstdmat=matrix(seq(0,yearstdMax,length=numpts),ncol=numpts,nrow=numpts,byrow = TRUE)
daystdmat=matrix(seq(0,daystdMax,length=numpts),ncol=numpts,nrow=numpts,byrow = FALSE)
yearstds=yrstdmat[1:(numpts^2)]
daystds=daystdmat[1:(numpts^2)]
oldnewfit=rep(0,dim(varcompare)[1])
for(i.test in 1:dim(varcompare)[1]){
curline=varcompare[i.test,]
listlistind=which(yearstds==curline$yearstd &daystds==curline$daystd)
years.list=brute$yearlistlist[[listlistind]]
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=0
# start with traits = 0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
# create "empty" individual
b.traits=sprintf("b.%s",curline$trait)  # list of traits in b.day format
indiv[b.traits]=curline$traitval.new #fill in the values for the traits we're actually using
yrfit=rep(0,length(years.list)) #initialize vector for storing yearly fitness
for(i in 1:length(years.list)){ #iterate through all years, calculate fitness for each
yrfit[i]=fitness(year=years.list[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
oldnewfit[i.test]=sum(log(yrfit+.Machine$double.eps))
}
require(zoo)
fit.tot=c(rollapply(c(years.list[[1]]$fit.daily,rep(0,duration-1)),duration,by=1,sum))
for(i in 2:length(years.list))
fit.tot=rbind(fit.tot,rollapply(c(years.list[[i]]$fit.daily,rep(0,duration-1)),duration,by=1,sum))
sum(log(apply(fit.tot,1,max)))
oldnewfit
varcompare
oldnewfit-geofit$new
oldnewfit-varcompare(geofit.new)
oldnewfit-varcompare$geofit.new
oldnewfit-varcompare$geofit.old
yrfit[1]
i=1
res=fitness(year=years.list[[i]],newpop=indiv,duration=duration,traits=traits)
traits
indiv
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=0
# start with traits = 0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
indiv
indiv$b.day=100
i=1
indiv$b.day=99.9
i=1
res=fitness(year=years.list[[i]],newpop=indiv,duration=duration,traits=traits)
res
yearslist[[i]]$fit.tot
fit.tot=c(rollapply(c(years.list[[1]]$fit.daily,rep(0,duration-1)),duration,by=1,sum))
fit.tot[100]
fit.tot[101]
runFile="opt3-2yr_comp1listlist.R"
set_wrkdir<-function(){
#function for setting working directory to the right place given the current computer/user
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin" || Sys.getenv("USERNAME")=="Collin.work"){ #If it's collin
if(Sys.info()["nodename"]=="DESKTOP-D6QSU8F"){
setwd("G:\\Repos\\phenology-cues") #desktop
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}i
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #laptop
}
}
set_wrkdir()
# source("scripts/var_exper/fig1_calculator_opt_comp.R")
source("scripts/var_exper/fig1_calculator_opt_comp.R")
tempPath=getwd()
set_wrkdir()
file.copy(from=paste("scripts/var_exper/runfiles/",runFile,sep = ""),
to=paste(tempPath,"/pars-version-",runFile,sep="")
)
runFile="opt3-2yr_comp1listlist.R"
set_wrkdir<-function(){
#function for setting working directory to the right place given the current computer/user
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin" || Sys.getenv("USERNAME")=="Collin.work"){ #If it's collin
if(Sys.info()["nodename"]=="DESKTOP-D6QSU8F"){
setwd("G:\\Repos\\phenology-cues") #desktop
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}i
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #laptop
}
runFile="opt3-2yr_comp1listlist.R"
set_wrkdir<-function(){
#function for setting working directory to the right place given the current computer/user
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin" || Sys.getenv("USERNAME")=="Collin.work"){ #If it's collin
if(Sys.info()["nodename"]=="DESKTOP-D6QSU8F"){
setwd("G:\\Repos\\phenology-cues") #desktop
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}i
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #laptop
}
}
set_wrkdir()
# source("scripts/var_exper/fig1_calculator_opt_comp.R")
source("scripts/var_exper/fig1_calculator_opt_comp.R")
tempPath=getwd()
set_wrkdir()
file.copy(from=paste("scripts/var_exper/runfiles/",runFile,sep = ""),
to=paste(tempPath,"/pars-version-",runFile,sep="")
)
runFile="opt3-2yr_comp1listlist.R"
set_wrkdir<-function(){
#function for setting working directory to the right place given the current computer/user
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin" || Sys.getenv("USERNAME")=="Collin.work"){ #If it's collin
if(Sys.info()["nodename"]=="DESKTOP-D6QSU8F"){
setwd("G:\\Repos\\phenology-cues") #desktop
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #laptop
}
}
set_wrkdir()
# source("scripts/var_exper/fig1_calculator_opt_comp.R")
source("scripts/var_exper/fig1_calculator_opt_comp.R")
tempPath=getwd()
set_wrkdir()
file.copy(from=paste("scripts/var_exper/runfiles/",runFile,sep = ""),
to=paste(tempPath,"/pars-version-",runFile,sep="")
)
set_wrkdir()
setwd("results/fig1/opt3-2yr-comp1listlist")
load("fig1dat-versionopt3-2yr-comp1listlist.Rdata",envir=opt<-new.env())
opt.varmeans=opt$overall.res[order(opt$overall.res$yearstd,opt$overall.res$daystd,opt$overall.res$trait),]
set_wrkdir()
setwd("results/fig1/compare3-2yr")
load("fig1dat-versioncompare3-2yr.Rdata",envir=brute<-new.env())
overall.res=brute$overall.res
varmeans=aggregate(as.numeric(overall.res$geofit),
by=list(daystd=as.factor(overall.res$daystd),
yearstd=as.factor(overall.res$yearstd),
trait=overall.res$trait),
FUN=mean)
varmeans$yearstd=as.numeric(as.character(varmeans$yearstd))
varmeans$daystd=as.numeric(as.character(varmeans$daystd))
varmeans$x=as.numeric(as.character(varmeans$x))
varpts=unique(varmeans[,c("daystd","yearstd")])
varmeans=varmeans[order(varmeans$yearstd,varmeans$daystd,varmeans$trait),]
brute$varmeans=varmeans
varcompare=cbind(varmeans, opt.varmeans[,c("geofit","traitval")])
names(varcompare)[4:6]=c("geofit.old","geofit.new","traitval.new")
varcompare=cbind(varcompare,res.diff=varcompare$geofit.old+varcompare$geofit.new)
varcompare$geofit.old=-varcompare$geofit.old
varcompare=cbind(varcompare,frac.diff=varcompare$res.diff/mean(varcompare$geofit.old+varcompare$geofit.new))
names(varcompare)[8]="frac.diff"
set_wrkdir()
save(varcompare,file="varCompare_2yr.Rdata")
#Let's look at cases where they didn't match
varcompare[,c(1:3,7,8)]
varcompare[which(abs(varcompare[,"res.diff"])>10^-10),]
set_wrkdir()
setwd("results/fig1/compare3-2yr")
load("fig1dat-versioncompare3-2yr.Rdata",envir=brute<-new.env())
set_wrkdir()
source("scripts/var_exper/runfiles/compare3-2yr.R") #call the runFile which as all the variables defined
mutdist=0 #to avoid error in the part of rate_setup.R that we're not using
source("scripts/rate_setup.R")
source("scripts/windows_subs.R")
yrstdmat=matrix(seq(0,yearstdMax,length=numpts),ncol=numpts,nrow=numpts,byrow = TRUE)
daystdmat=matrix(seq(0,daystdMax,length=numpts),ncol=numpts,nrow=numpts,byrow = FALSE)
yearstds=yrstdmat[1:(numpts^2)]
daystds=daystdmat[1:(numpts^2)]
oldnewfit=rep(0,dim(varcompare)[1])
for(i.test in 1:dim(varcompare)[1]){
curline=varcompare[i.test,]
listlistind=which(yearstds==curline$yearstd &daystds==curline$daystd)
years.list=brute$yearlistlist[[listlistind]]
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=0
# start with traits = 0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
# create "empty" individual
b.traits=sprintf("b.%s",curline$trait)  # list of traits in b.day format
indiv[b.traits]=curline$traitval.new #fill in the values for the traits we're actually using
yrfit=rep(0,length(years.list)) #initialize vector for storing yearly fitness
for(i in 1:length(years.list)){ #iterate through all years, calculate fitness for each
yrfit[i]=fitness(year=years.list[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
oldnewfit[i.test]=sum(log(yrfit+.Machine$double.eps))
}
require(zoo)
fit.tot=c(rollapply(c(years.list[[1]]$fit.daily,rep(0,duration-1)),duration,by=1,sum))
for(i in 2:length(years.list))
fit.tot=rbind(fit.tot,rollapply(c(years.list[[i]]$fit.daily,rep(0,duration-1)),duration,by=1,sum))
sum(log(apply(fit.tot,1,max)))
oldnewfit-varcompare$geofit.old
runFile="opt3-2yr_comp1listlist.R"
set_wrkdir<-function(){
#function for setting working directory to the right place given the current computer/user
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin" || Sys.getenv("USERNAME")=="Collin.work"){ #If it's collin
if(Sys.info()["nodename"]=="DESKTOP-D6QSU8F"){
setwd("G:\\Repos\\phenology-cues") #desktop
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #laptop
}
}
set_wrkdir()
# source("scripts/var_exper/fig1_calculator_opt_comp.R")
source("scripts/var_exper/fig1_calculator_opt_comp.R")
tempPath=getwd()
set_wrkdir()
file.copy(from=paste("scripts/var_exper/runfiles/",runFile,sep = ""),
to=paste(tempPath,"/pars-version-",runFile,sep="")
)
set_wrkdir()
setwd("results/fig1/opt3-2yr-comp1listlist")
load("fig1dat-versionopt3-2yr-comp1listlist.Rdata",envir=opt<-new.env())
opt.varmeans=opt$overall.res[order(opt$overall.res$yearstd,opt$overall.res$daystd,opt$overall.res$trait),]
set_wrkdir()
setwd("results/fig1/compare3-2yr")
load("fig1dat-versioncompare3-2yr.Rdata",envir=brute<-new.env())
overall.res=brute$overall.res
varmeans=aggregate(as.numeric(overall.res$geofit),
by=list(daystd=as.factor(overall.res$daystd),
yearstd=as.factor(overall.res$yearstd),
trait=overall.res$trait),
FUN=mean)
varmeans$yearstd=as.numeric(as.character(varmeans$yearstd))
varmeans$daystd=as.numeric(as.character(varmeans$daystd))
varmeans$x=as.numeric(as.character(varmeans$x))
varpts=unique(varmeans[,c("daystd","yearstd")])
varmeans=varmeans[order(varmeans$yearstd,varmeans$daystd,varmeans$trait),]
brute$varmeans=varmeans
varcompare=cbind(varmeans, opt.varmeans[,c("geofit","traitval")])
names(varcompare)[4:6]=c("geofit.old","geofit.new","traitval.new")
varcompare=cbind(varcompare,res.diff=varcompare$geofit.old+varcompare$geofit.new)
varcompare$geofit.old=-varcompare$geofit.old
varcompare=cbind(varcompare,frac.diff=varcompare$res.diff/mean(varcompare$geofit.old+varcompare$geofit.new))
names(varcompare)[8]="frac.diff"
set_wrkdir()
save(varcompare,file="varCompare_2yr.Rdata")
#Let's look at cases where they didn't match
varcompare[,c(1:3,7,8)]
varcompare[which(abs(varcompare[,"res.diff"])>10^-10),]
#Are the two lists of years identical
identical(opt$yearlistlist,brute$yearlistlist)
for(i in 1:length(opt$yearlistlist)){
for(j in 1:length(opt$yearlistlist[[1]])){
testopt=opt$yearlistlist[[i]][[j]]
testbrute=brute$yearlistlist[[i]][[j]]
print(identical(testopt,testbrute))
}
}
oldtrait=aggregate(as.numeric(overall.res$traitval),
by=list(daystd=as.factor(overall.res$daystd),
yearstd=as.factor(overall.res$yearstd),
trait=overall.res$trait),
FUN=mean)
oldtrait=oldtrait$x
varmeans=aggregate(as.numeric(overall.res$geofit),
by=list(daystd=as.factor(overall.res$daystd),
yearstd=as.factor(overall.res$yearstd),
trait=overall.res$trait),
FUN=mean)
varmeans
varmeans$yearstd=as.numeric(as.character(varmeans$yearstd))
varmeans$daystd=as.numeric(as.character(varmeans$daystd))
varmeans$x=as.numeric(as.character(varmeans$x))
varpts=unique(varmeans[,c("daystd","yearstd")])
varmeans=varmeans[order(varmeans$yearstd,varmeans$daystd,varmeans$trait),]
brute$varmeans=varmeans
varmeans
varpts=unique(varmeans[,c("daystd","yearstd")])
varmeans
set_wrkdir()
setwd("results/fig1/opt3-2yr-comp1listlist")
load("fig1dat-versionopt3-2yr-comp1listlist.Rdata",envir=opt<-new.env())
opt.varmeans=opt$overall.res[order(opt$overall.res$yearstd,opt$overall.res$daystd,opt$overall.res$trait),]
set_wrkdir()
setwd("results/fig1/compare3-2yr")
load("fig1dat-versioncompare3-2yr.Rdata",envir=brute<-new.env())
overall.res=brute$overall.res
oldtrait=aggregate(as.numeric(overall.res$traitval),
by=list(daystd=as.factor(overall.res$daystd),
yearstd=as.factor(overall.res$yearstd),
trait=overall.res$trait),
FUN=mean)
oldtrait=oldtrait$x
varmeans=aggregate(as.numeric(overall.res$geofit),
by=list(daystd=as.factor(overall.res$daystd),
yearstd=as.factor(overall.res$yearstd),
trait=overall.res$trait),
FUN=mean)
varmeans$yearstd=as.numeric(as.character(varmeans$yearstd))
varmeans$daystd=as.numeric(as.character(varmeans$daystd))
varmeans$x=as.numeric(as.character(varmeans$x))
varpts=unique(varmeans[,c("daystd","yearstd")])
varmeans=varmeans[order(varmeans$yearstd,varmeans$daystd,varmeans$trait),]
varmeans=cbind(varmeans,oldtrait)
brute$varmeans=varmeans
varcompare=cbind(varmeans, opt.varmeans[,c("geofit","traitval")])
names(varcompare)[4:7]=c("geofit.old","traital.old","geofit.new","traitval.new")
varcompare=cbind(varcompare,res.diff=varcompare$geofit.old+varcompare$geofit.new)
varcompare$geofit.old=-varcompare$geofit.old
varcompare=cbind(varcompare,frac.diff=varcompare$res.diff/mean(varcompare$geofit.old+varcompare$geofit.new))
names(varcompare)[9]="frac.diff"
set_wrkdir()
save(varcompare,file="varCompare_2yr.Rdata")
varcompare
varcompare
set_wrkdir()
setwd("results/fig1/opt3-2yr-comp1listlist")
load("fig1dat-versionopt3-2yr-comp1listlist.Rdata",envir=opt<-new.env())
opt.varmeans=opt$overall.res[order(opt$overall.res$yearstd,opt$overall.res$daystd,opt$overall.res$trait),]
set_wrkdir()
setwd("results/fig1/compare3-2yr")
load("fig1dat-versioncompare3-2yr.Rdata",envir=brute<-new.env())
overall.res=brute$overall.res
oldtrait=aggregate(as.numeric(overall.res$traitval),
by=list(daystd=as.factor(overall.res$daystd),
yearstd=as.factor(overall.res$yearstd),
trait=overall.res$trait),
FUN=mean)
oldtrait=oldtrait$x
varmeans=aggregate(as.numeric(overall.res$geofit),
by=list(daystd=as.factor(overall.res$daystd),
yearstd=as.factor(overall.res$yearstd),
trait=overall.res$trait),
FUN=mean)
varmeans$yearstd=as.numeric(as.character(varmeans$yearstd))
varmeans$daystd=as.numeric(as.character(varmeans$daystd))
varmeans$x=as.numeric(as.character(varmeans$x))
varpts=unique(varmeans[,c("daystd","yearstd")])
varmeans=cbind(varmeans,oldtrait)
varmeans=varmeans[order(varmeans$yearstd,varmeans$daystd,varmeans$trait),]
brute$varmeans=varmeans
varcompare=cbind(varmeans, opt.varmeans[,c("geofit","traitval")])
names(varcompare)[4:7]=c("geofit.old","traital.old","geofit.new","traitval.new")
varcompare=cbind(varcompare,res.diff=varcompare$geofit.old+varcompare$geofit.new)
varcompare$geofit.old=-varcompare$geofit.old
varcompare=cbind(varcompare,frac.diff=varcompare$res.diff/mean(varcompare$geofit.old+varcompare$geofit.new))
names(varcompare)[9]="frac.diff"
set_wrkdir()
save(varcompare,file="varCompare_2yr.Rdata")
#Let's look at cases where they didn't match
varcompare[,c(1:3,7,8)]
varcompare[which(abs(varcompare[,"res.diff"])>10^-10),]
#Are the two lists of years identical
identical(opt$yearlistlist,brute$yearlistlist)
for(i in 1:length(opt$yearlistlist)){
for(j in 1:length(opt$yearlistlist[[1]])){
testopt=opt$yearlistlist[[i]][[j]]
testbrute=brute$yearlistlist[[i]][[j]]
print(identical(testopt,testbrute))
}
}
varcompare
varcompare
