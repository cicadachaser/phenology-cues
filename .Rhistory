cures=opt_cutemp(years.list)
resmat=rbind(resmat,c(daystd,yearstd,"cutemp",cures))
time.opt=proc.time()-start.opt
time.opt
.17/3
numYears
res=foreach(i.stdev = 1:length(yearstds)) %dopar% {
#Re-load each library needed
require(zoo) #for use in choosing initial points to check
###################################################
# Produce a set of years of appropriate variances #
###################################################
yearstd=yearstds[i.stdev]
daystd=daystds[i.stdev]
#generate years of climate
years.list=list()
count=1
for(i.year in 1:numYears){
offset=round(rnorm(1,sd=yearstd))
newtemp= meanYr[((1:365+offset[1]) %% 365)+1,2]
newtemp=newtemp+rnorm(365,sd=daystd)
newYear=as.data.frame(cbind(day=1:365,
temp=newtemp,
precip=meanYr$precip,
cuprecip=cumsum(pmax(0,meanYr$precip)),
cutemp=cumsum(pmax(0,newtemp-baseTemp)),
daysq=(1:365)^2,
tempsq=(newtemp)^2,
precipsq=(meanYr$precip)^2,
cutempsq=cumsum(pmin(0,newtemp-baseTemp)^2),
cuprecipsq=cumsum(pmin(0,meanYr$precip)^2)
))
fit.daily=fit_fn(newYear)
fit.tot=c(rollapply(c(fit.daily,rep(0,duration-1)),duration,by=1,sum))
newYear=cbind(newYear,fit.daily=fit.daily,fit.tot=fit.tot)
years.list[[count]]<-newYear
count=count+1
}
#####################
#create initial starting points, check them
resmat=NULL
#FOR B.DAY
start.opt=proc.time()
dayres=opt_day(years.list)
resmat=rbind(resmat,c(daystd,yearstd,"day",dayres))
tempres=opt_temp(years.list)
resmat=rbind(resmat,c(daystd,yearstd,"temp",tempres))
cures=opt_cutemp(years.list)
resmat=rbind(resmat,c(daystd,yearstd,"cutemp",cures))
time.opt=proc.time()-start.opt
resmat
}
overall.res = do.call(rbind.data.frame, res)
overall.res
names(overall.res)=c("daystd","yearstd","trait","geofit","traitval")
overall.res
resmat
overall.res
str(overall.res)
apply(overall.res,2,class)
apply(overall.res,2,str)
overall.res$daystd*10
overall.res
as.numeric(as.character(overall.res$daystd))
fac2num=function(vec){return(as.numeric(as.character(vec))}
fac2num=function(vec){return(as.numeric(as.character(vec)))}
fac2num
fac2num(overall.res$daystd)
overall.res = do.call(rbind.data.frame, res)
names(overall.res)=c("daystd","yearstd","trait","geofit","traitval")
overall.res$daystd=fac2num(overall.res$daystd)
overall.res$yearstd=fac2num(overall.res$yearstd)
overall.res$geofit=fac2num(overall.res$geofit)
overall.res$traitval=fac2num(overall.res$traitval)
overall.res
save.image(file=paste("results/fig1/",runnum,"/fig1dat-version",runnum,".Rdata",sep=""))
set_wrkdir()
dir.create(paste("results/fig1/",runnum,sep=""))
set_wrkdir()
dir.create(paste("results/fig1/",runnum,sep=""))
save.image(file=paste("results/fig1/",runnum,"/fig1dat-version",runnum,".Rdata",sep=""))
source("scripts/var_exper/fig1_plot.R")
overall.res
varmeans=aggregate(as.numeric(overall.res$geofit),
by=list(dayvar=as.factor(overall.res$dayvar),
yearvar=as.factor(overall.res$yearvar),
trait=overall.res$trait),
FUN=mean)
varmeans=overall.res
varpts=unique(varmeans[,c("dayvar","yearvar")])
varmeans
varpts=unique(varmeans[,c("daystd","yearstd")])
winner=rep("init",nrow(varpts))
cur.ind=which(varmeans$daystd==varpts$daystd[i.pt] & varmeans$yearstd==varpts$yearstd[i.pt])
i.pt=1
cur.ind=which(varmeans$daystd==varpts$daystd[i.pt] & varmeans$yearstd==varpts$yearstd[i.pt])
curvar=varmeans[cur.ind,]
curvar
if(sum(curvar$x==min(curvar$x))>1){
winner[i.pt]="tie"
}else{
winner[i.pt]=curvar[which.min(curvar$x),]$trait
}
cur.ind=which(varmeans$daystd==varpts$daystd[i.pt] & varmeans$yearstd==varpts$yearstd[i.pt])
curvar=varmeans[cur.ind,]
if(sum(curvar$geofit==min(curvar$geofit))>1){
winner[i.pt]="tie"
}else{
winner[i.pt]=curvar[which.min(curvar$geofit),]$trait
}
winner
varmeans
for(i.pt in 1:nrow(varpts)){
cur.ind=which(varmeans$daystd==varpts$daystd[i.pt] & varmeans$yearstd==varpts$yearstd[i.pt])
curvar=varmeans[cur.ind,]
if(sum(curvar$geofit==min(curvar$geofit))>1){
winner[i.pt]="tie"
}else{
winner[i.pt]=curvar[which.min(curvar$geofit),]$trait
}
}
winner
for(i.pt in 1:nrow(varpts)){
cur.ind=which(varmeans$daystd==varpts$daystd[i.pt] & varmeans$yearstd==varpts$yearstd[i.pt])
curvar=varmeans[cur.ind,]
if(sum(curvar$geofit==min(curvar$geofit))>1){
winner[i.pt]="tie"
}else{
winner[i.pt]=as.character(curvar[which.min(curvar$geofit),]$trait)
}
}
winner
overall.res
overall.res$trait=as.character(overall.res$trait
)
for(i.pt in 1:nrow(varpts)){
cur.ind=which(varmeans$daystd==varpts$daystd[i.pt] & varmeans$yearstd==varpts$yearstd[i.pt])
curvar=varmeans[cur.ind,]
if(sum(curvar$geofit==min(curvar$geofit))>1){
winner[i.pt]="tie"
}else{
winner[i.pt]=curvar[which.min(curvar$geofit),]$trait
}
}
winner
varmeans=overall.res
varpts=unique(varmeans[,c("daystd","yearstd")])
winner=rep("init",nrow(varpts))
for(i.pt in 1:nrow(varpts)){
cur.ind=which(varmeans$daystd==varpts$daystd[i.pt] & varmeans$yearstd==varpts$yearstd[i.pt])
curvar=varmeans[cur.ind,]
if(sum(curvar$geofit==min(curvar$geofit))>1){
winner[i.pt]="tie"
}else{
winner[i.pt]=curvar[which.min(curvar$geofit),]$trait
}
}
winner
set_wrkdir()
setwd(paste("results/fig1/",runnum,sep=""))
require(ggplot2)
df=data.frame(x=varmeans$dayvar,
y=varmeans$yearvar,
z=winner)
x11()
ggplot(df, aes(x,y))+
geom_tile(aes(fill=z))+
labs(title="Winning trait",
x="day to day variance",
y="year to year variance")
dev.print(pdf,paste("winners-heatmap-run-",runnum,".pdf",sep=""))
df
df=data.frame(x=varmeans$dayvar,
y=varmeans$yearvar,
z=winner)
set_wrkdir()
setwd(paste("results/fig1/",runnum,sep=""))
require(ggplot2)
df=data.frame(x=varmeans$daystd,
y=varmeans$yearstd,
z=winner)
df
x11()
ggplot(df, aes(x,y))+
geom_tile(aes(fill=z))+
labs(title="Winning trait",
x="day to day variance",
y="year to year variance")
dev.print(pdf,paste("winners-heatmap-run-",runnum,".pdf",sep=""))
winner
nrow(varpts)
df
winner
i.pt=1
cur.ind=which(varmeans$daystd==varpts$daystd[i.pt] & varmeans$yearstd==varpts$yearstd[i.pt])
curvar=varmeans[cur.ind,]
curvar
i.pt=2
cur.ind=which(varmeans$daystd==varpts$daystd[i.pt] & varmeans$yearstd==varpts$yearstd[i.pt])
curvar=varmeans[cur.ind,]
curvar
carpts
varpts
df=data.frame(x=varpts$daystd,
y=varpts$yearstd,
z=winner)
x11()
ggplot(df, aes(x,y))+
geom_tile(aes(fill=z))+
labs(title="Winning trait",
x="day to day variance",
y="year to year variance")
dev.print(pdf,paste("winners-heatmap-run-",runnum,".pdf",sep=""))
for(i.yearvar in unique(varmeans$yearvar)){
cur.df=varmeans[which(varmeans$yearvar==i.yearvar),]
print(ggplot(cur.df,aes(dayvar,x))+
geom_line(aes(color=factor(trait)))+
labs(title=paste("fitness by variance, yearvar at",i.yearvar),
x="day to day variance",
y="geometric fitness"))
dev.print(pdf,paste("day-by-fit-yrvar",round(i.yearvar),"-run-",runnum,".pdf",sep=""))
}
for(i.dayvar in unique(varmeans$dayvar)){
cur.df=varmeans[which(varmeans$dayvar==i.dayvar),]
print(ggplot(cur.df,aes(yearvar,x))+
geom_line(aes(color=factor(trait)))+
labs(title=paste("fitness by variance, dayvar at",i.dayvar),
x="year to year variance",
y="geometric fitness"))
dev.print(pdf,paste("year-by-fit-dayvar",round(i.dayvar),"-run-",runnum,".pdf",sep=""))
}
getwd()
x11()
ggplot(df, aes(x,y))+
geom_tile(aes(fill=z))+
labs(title="Winning trait",
x="day to day variance",
y="year to year variance")
dev.print(pdf,paste("winners-heatmap-run-",runnum,".pdf",sep=""))
for(i.yearvar in unique(varmeans$yearvar)){
cur.df=varmeans[which(varmeans$yearvar==i.yearvar),]
print(ggplot(cur.df,aes(dayvar,x))+
geom_line(aes(color=factor(trait)))+
labs(title=paste("fitness by variance, yearvar at",i.yearvar),
x="day to day variance",
y="geometric fitness"))
dev.print(pdf,paste("day-by-fit-yrvar",round(i.yearvar),"-run-",runnum,".pdf",sep=""))
}
for(i.dayvar in unique(varmeans$dayvar)){
cur.df=varmeans[which(varmeans$dayvar==i.dayvar),]
print(ggplot(cur.df,aes(yearvar,x))+
geom_line(aes(color=factor(trait)))+
labs(title=paste("fitness by variance, dayvar at",i.dayvar),
x="year to year variance",
y="geometric fitness"))
dev.print(pdf,paste("year-by-fit-dayvar",round(i.dayvar),"-run-",runnum,".pdf",sep=""))
}
for(i.yearvar in unique(varmeans$yearvar)){
cur.df=varmeans[which(varmeans$yearvar==i.yearvar),]
print(ggplot(cur.df,aes(dayvar,x))+
geom_line(aes(color=factor(trait)))+
labs(title=paste("fitness by variance, yearvar at",i.yearvar),
x="day to day variance",
y="geometric fitness"))
dev.print(pdf,paste("day-by-fit-yrvar",round(i.yearvar),"-run-",runnum,".pdf",sep=""))
}
for(i.yearvar in unique(varmeans$yearvar)){
cur.df=varmeans[which(varmeans$yearvar==i.yearvar),]
print(ggplot(cur.df,aes(dayvar,x))+
geom_line(aes(color=factor(trait)))+
labs(title=paste("fitness by variance, yearvar at",i.yearvar),
x="day to day variance",
y="geometric fitness"))
dev.print(pdf,paste("day-by-fit-yrvar",round(i.yearvar),"-run-",runnum,".pdf",sep=""))
}
for(i.yearstd in unique(varmeans$yearstd)){
cur.df=varmeans[which(varmeans$yearstd==i.yearstd),]
print(ggplot(cur.df,aes(daystd,x))+
geom_line(aes(color=factor(trait)))+
labs(title=paste("fitness by stdev, yearstdev at",i.yearvar),
x="day to day stdev",
y="geometric fitness"))
dev.print(pdf,paste("day-by-fit-yrvar",round(i.yearvar),"-run-",runnum,".pdf",sep=""))
}
cur.df=varmeans[which(varmeans$yearstd==i.yearstd),]
cur.df
print(ggplot(cur.df,aes(daystd,x))+
geom_line(aes(color=factor(trait)))+
labs(title=paste("fitness by stdev, yearstdev at",i.yearvar),
x="day to day stdev",
y="geometric fitness"))
trait
print(ggplot(cur.df,aes(daystd,x))+
geom_line(aes(color=factor(cur.df$trait)))+
labs(title=paste("fitness by stdev, yearstdev at",i.yearvar),
x="day to day stdev",
y="geometric fitness"))
(ggplot(cur.df,aes(daystd,x))
)
print(ggplot(cur.df,aes(daystd,geofit))+
geom_line(aes(color=factor(cur.df$trait)))+
labs(title=paste("fitness by stdev, yearstdev at",i.yearvar),
x="day to day stdev",
y="geometric fitness"))
dev.print(pdf,paste("day-by-fit-yrvar",round(i.yearvar),"-run-",runnum,".pdf",sep=""))
ggplot(cur.df,aes(daystd,geofit))
geom_line(aes(color=factor(cur.df$trait)))
+geom_line(aes(color=factor(cur.df$trait)))
ggplot(cur.df,aes(daystd,geofit))+geom_line(aes(color=factor(cur.df$trait)))
ggplot(cur.df,aes(daystd,geofit))+geom_line(aes(color=factor(cur.df$trait)))
ggplot(cur.df,aes(daystd,geofit))+geom_line(aes(color=factor(cur.df$trait)))
ggplot(cur.df,aes(daystd,geofit))+
geom_line(aes(color=factor(cur.df$trait)))+
labs(title=paste("fitness by stdev, yearstdev at",i.yearvar),
x="day to day stdev",
y="geometric fitness")
for(i.yearstd in unique(varmeans$yearstd)){
cur.df=varmeans[which(varmeans$yearstd==i.yearstd),]
print(ggplot(cur.df,aes(daystd,geofit))+
geom_line(aes(color=factor(cur.df$trait)))+
labs(title=paste("fitness by stdev, yearstdev at",i.yearstd),
x="day to day stdev",
y="geometric fitness"))
dev.print(pdf,paste("day-by-fit-yrstd",round(i.yearstd),"-run-",runnum,".pdf",sep=""))
}
for(i.daystd in unique(varmeans$daystd)){
cur.df=varmeans[which(varmeans$daystd==i.daystd),]
print(ggplot(cur.df,aes(yearstd,geofit))+
geom_line(aes(color=factor(trait)))+
labs(title=paste("fitness by stdev, daystd at",i.daystd),
x="year to year std",
y="geometric fitness"))
dev.print(pdf,paste("year-by-fit-daystd",round(i.daystd),"-run-",runnum,".pdf",sep=""))
}
getwd()
getwd()[1]
getwd()[[1]]
paste(getwd(),"hi")
setwd(paste(getwd(),"hi"))
tempPath=getwd()
tempPath=getwd()
set_wrkdir()
file.copy(from=paste("scripts/var_exper/runfiles/",runFile,sep = ""),
to=paste(tempPath,"pars--",runFile,sep="")
)
getwd
getwd()
paste(tempPath,"pars--",runFile,sep="")
set_wrkdir()
load(file=paste("results/fig1/",runnum,"/fig1dat-version",runnum,".Rdata",sep=""))
varmeans=overall.res
varpts=unique(varmeans[,c("daystd","yearstd")])
winner=rep("init",nrow(varpts))
yearstd=daystd=rep(-10,nrow(varpts))
for(i.pt in 1:nrow(varpts)){
cur.ind=which(varmeans$daystd==varpts$daystd[i.pt] & varmeans$yearstd==varpts$yearstd[i.pt])
curvar=varmeans[cur.ind,]
yearstd=
if(sum(curvar$geofit==min(curvar$geofit))>1){
winner[i.pt]="tie"
}else{
winner[i.pt]=curvar[which.min(curvar$geofit),]$trait
}
}
# x11()
# m=matrix(c(1,1,1,2),nrow=1)
# layout(m)
# win.levels=unique(winner)
# col=c("grey","red","blue","green")[1:length(win.levels)]
# image(matrix(winner==win.levels[1],ncol=numpts),
#       x=sort(as.numeric(levels(varpts$dayvar))),
#       y=sort(as.numeric(levels(varpts$yearvar))),
#       col=c(NA,col=col[1]),
#       xlab="Day-to-day variance",
#       ylab="year-to-year variance")
#
# for(i in 2:length(win.levels)){
#   image(matrix(winner==win.levels[i],ncol=numpts),
#       x=sort(as.numeric(levels(varpts$dayvar))),
#       y=sort(as.numeric(levels(varpts$yearvar))),
#         col=c(NA,col[i]),add=TRUE)
# }
# par(xpd=TRUE)
# legend(legend=win.levels, col=col, title="Best Trait",xpd = TRUE)
########################
#Making the plots
########################
#First, make heat map of winners
set_wrkdir()
setwd(paste("results/fig1/",runnum,sep=""))
require(ggplot2)
df=data.frame(x=varpts$daystd,
y=varpts$yearstd,
z=winner)
x11()
ggplot(df, aes(x,y))+
geom_tile(aes(fill=z))+
labs(title="Winning trait",
x="day to day variance",
y="year to year variance")
dev.print(pdf,paste("winners-heatmap-run-",runnum,".pdf",sep=""))
for(i.yearstd in unique(varmeans$yearstd)){
cur.df=varmeans[which(varmeans$yearstd==i.yearstd),]
print(ggplot(cur.df,aes(daystd,geofit))+
geom_line(aes(color=factor(cur.df$trait)))+
labs(title=paste("fitness by stdev, yearstdev at",i.yearstd),
x="day to day stdev",
y="geometric fitness"))
dev.print(pdf,paste("day-by-fit-yrstd",round(i.yearstd),"-run-",runnum,".pdf",sep=""))
}
for(i.daystd in unique(varmeans$daystd)){
cur.df=varmeans[which(varmeans$daystd==i.daystd),]
print(ggplot(cur.df,aes(yearstd,geofit))+
geom_line(aes(color=factor(trait)))+
labs(title=paste("fitness by stdev, daystd at",i.daystd),
x="year to year std",
y="geometric fitness"))
dev.print(pdf,paste("year-by-fit-daystd",round(i.daystd),"-run-",runnum,".pdf",sep=""))
}
tempPath=getwd()
tempPath
set_wrkdir()
file.copy(from=paste("scripts/var_exper/runfiles/",runFile,sep = ""),
to=paste(tempPath/,"pars--",runFile,sep="")
)
file.copy(from=paste("scripts/var_exper/runfiles/",runFile,sep = ""),
to=paste(tempPath,"pars--",runFile,sep="")
)
tempPath
file.copy(from=paste("scripts/var_exper/runfiles/",runFile,sep = ""),
to=paste(tempPath,"/pars--",runFile,sep="")
)
runFile="opt1-10yr.R"
set_wrkdir<-function(){
#function for setting working directory to the right place given the current computer/user
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin" || Sys.getenv("USERNAME")=="Collin.work"){ #If it's collin
if(Sys.info()["nodename"]=="DESKTOP-D6QSU8F"){
setwd("G:\\Repos\\phenology-cues") #desktop
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #laptop
}
}
set_wrkdir()
source("scripts/var_exper/fig1_calculator_opt.R")
tempPath=getwd()
set_wrkdir()
file.copy(from=paste("scripts/var_exper/runfiles/",runFile,sep = ""),
to=paste(tempPath,"/pars-version-",runFile,sep="")
)
source('G:/Repos/phenology-cues/scripts/var_exper/runfiles/opt1-10yr.R')
runFile="opt1-10yr.R"
set_wrkdir<-function(){
#function for setting working directory to the right place given the current computer/user
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin" || Sys.getenv("USERNAME")=="Collin.work"){ #If it's collin
if(Sys.info()["nodename"]=="DESKTOP-D6QSU8F"){
setwd("G:\\Repos\\phenology-cues") #desktop
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #laptop
}
}
set_wrkdir()
source("scripts/var_exper/fig1_calculator_opt.R")
tempPath=getwd()
set_wrkdir()
file.copy(from=paste("scripts/var_exper/runfiles/",runFile,sep = ""),
to=paste(tempPath,"/pars-version-",runFile,sep="")
)
ggplot(df, aes(x,y))+
geom_tile(aes(fill=z))+
labs(title="Winning trait",
x="day to day variance",
y="year to year variance")
dev.print(pdf,paste("winners-heatmap-run-",runnum,".pdf",sep=""))
getwd()
setwd(tempPath)
dev.print(pdf,paste("winners-heatmap-run-",runnum,".pdf",sep=""))
runFile="opt1-10yr.R"
set_wrkdir<-function(){
#function for setting working directory to the right place given the current computer/user
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin" || Sys.getenv("USERNAME")=="Collin.work"){ #If it's collin
if(Sys.info()["nodename"]=="DESKTOP-D6QSU8F"){
setwd("G:\\Repos\\phenology-cues") #desktop
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #laptop
}
}
set_wrkdir()
source("scripts/var_exper/fig1_calculator_opt.R")
tempPath=getwd()
set_wrkdir()
file.copy(from=paste("scripts/var_exper/runfiles/",runFile,sep = ""),
to=paste(tempPath,"/pars-version-",runFile,sep="")
)
warnings()
