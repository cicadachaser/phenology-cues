return(sum(log(yrfit)))
}
obj_fn(ordpop[1,],duration,years.list[years.index],traits)
sort(geofit)
obj_fn(ordpop[1,],duration,years.list[years.index],traits)
head(sort(geofit))
geofit
newpop<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
yrfit=matrix(0,nrow=N,ncol=length(years.index))
for(i in 1:length(years.index)){
pop<-selection(newpop,duration,year=years.list[[years.index[i]]],N,traits=traits)
yrfit[,i]=pop$Wi
}
geofit=apply(yrfit,1,function(x){sum(log(x))})
ordpop=newpop[rev(order(geofit)),]
head(sort(geofit))
head(rev(sort(geofit)))
geofit=apply(yrfit,1,function(x){sum(log(x))})
ordpop=newpop[rev(order(geofit)),]
topop=ordpop[1:20,]
obj_fn<-function(indiv,duration,yrs,traits){
#takes individual, and the years that are to be used
yrfit=rep(0,length(yrs))
for(i in 1:length(yrs)){
res=selection(indiv,duration,year=yrs[[i]],N=1,traits=traits)
yrfit[i]=res$Wi
}
return(sum(log(yrfit)))
obj_fn(ordpop[1,],duration,years.list[years.index],traits)
}
rat=matrix(1:6,2,3)
obj_fn(ordpop[1,],duration,years.list[years.index],traits)
fastnum=20 #number of points to test quickly
slownum=10 #number of points to test slowly
data.frame(b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=0)
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
indiv
b.traits=sprintf("b.%s",traits)
b.traits
indiv[b.traits]
obj_fn<-function(x,duration,yrs,traits){
#takes individual, and the years that are to be used
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
b.traits=sprintf("b.%s",traits)
indiv[b.traits]=x
yrfit=rep(0,length(yrs))
for(i in 1:length(yrs)){
res=selection(indiv,duration,year=yrs[[i]],N=1,traits=traits)
yrfit[i]=res$Wi
}
return(-sum(log(yrfit)))
}
b.traits=sprintf("b.%s",traits)
b.traits
head(ordpop)
topop=ordpop[1:fastnum,b.traits]
topop
i=1
optim(par=topop[i,],fn=obj_fn,duration=duration,yrs=years.list[years.index],traits=traits)
topop[1,]
optim(par=topop[2,],fn=obj_fn,duration=duration,yrs=years.list[years.index],traits=traits)
topop[2,]
store=list()
for(i in 1:fastnum){
store[[i]]=optim(par=topop[2,],fn=obj_fn,duration=duration,yrs=years.list[years.index],traits=traits)
}
for(i in 1:fastnum){
store[[i]]=optim(par=topop[i,],fn=obj_fn,duration=duration,yrs=years.list[years.index],traits=traits)
}
obj_fn<-function(x,duration,yrs,traits){
#takes individual, and the years that are to be used
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
b.traits=sprintf("b.%s",traits)
indiv[b.traits]=x
yrfit=rep(0,length(yrs))
for(i in 1:length(yrs)){
res=selection(indiv,duration,year=yrs[[i]],N=1,traits=traits)
yrfit[i]=res$Wi
}
return(-sum(log(yrfit)))
}
for(i in 1:fastnum){
store[[i]]=optim(par=topop[i,],fn=obj_fn,duration=duration,yrs=years.list[years.index],traits=traits)
}
x
rev(sort(geofit))
head(rev(sort(geofit)))
(rev(sort(geofit)))[1:20]
fastnum
for(i in 1:fastnum){
print(i)
store[[i]]=optim(par=topop[i,],fn=obj_fn,duration=duration,yrs=years.list[years.index],traits=traits)
}
store
obj_fn(
)
obj_fn
obj_fn(x=topop[3,],duration=duration, yrs =years.list[years.index],traits=traits)
fitness(years.list[[1]],ordpop[1,],duration=10,traits=traits)
obj_fn<-function(x,duration,yrs,traits){
#takes individual, and the years that are to be used
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
b.traits=sprintf("b.%s",traits)
indiv[b.traits]=x
yrfit=rep(0,length(yrs))
for(i in 1:length(yrs)){
yrfit=fitness(indiv,duration,year=yrs[[i]],N=1,traits=traits)$fit
}
return(-sum(log(yrfit)))
}
rm(list=ls())
set_wrkdir<-function(){
#function for setting working directory to the right place given the current computer/user
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin" || Sys.getenv("USERNAME")=="Collin.work"){ #If it's collin
if(Sys.info()["nodename"]=="DESKTOP-D6QSU8F"){
setwd("G:\\Repos\\phenology-cues") #desktop
setwd("C:\\Repos\\phenology-cues") #desktop
}
}else{
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #laptop
}
}
rm(list=ls())
set_wrkdir<-function(){
#function for setting working directory to the right place given the current computer/user
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin" || Sys.getenv("USERNAME")=="Collin.work"){ #If it's collin
if(Sys.info()["nodename"]=="DESKTOP-D6QSU8F"){
setwd("G:\\Repos\\phenology-cues") #desktop
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #laptop
}
}
obj_fn<-function(x,duration,yrs,traits){
#takes individual, and the years that are to be used
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
b.traits=sprintf("b.%s",traits)
indiv[b.traits]=x
yrfit=rep(0,length(yrs))
for(i in 1:length(yrs)){
yrfit=fitness(year=yrs[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
return(-sum(log(yrfit)))
}
################################
# Optimizing geometric fitness #
################################
#Prepping:
runsname="parameterexample"
fastnum=20 #number of points to test quickly
slownum=10 #number of points to test slowly
set_wrkdir()
source("scripts/windows_subs.R")
source("scripts/rate_setup.R")
source(paste("fitcurve/",fitshape,".R",sep=""))
source(paste("parameters/",runsname,".R",sep=""))
years.list=NULL
if(runType=="standard"){
years.list=yeargen.davis(best.temp = best.temp,sd.temp = sd.temp,
best.precip = best.precip,sd.precip = sd.precip)
} else if(runType=="unitTestConst"){
out=yeargen.const(numYears)
years.list=out[["years.list"]]
years.index=rep(1,numYears)
} else if (runType=="unitTestRand"){
out=yeargen.rand(numYears)
runsname="parameterexample"
fastnum=20 #number of points to test quickly
slownum=10 #number of points to test slowly
set_wrkdir()
source("scripts/windows_subs.R")
source("scripts/rate_setup.R")
runsname="parameterexample"
fastnum=20 #number of points to test quickly
slownum=10 #number of points to test slowly
set_wrkdir()
source("scripts/windows_subs.R")
source("scripts/rate_setup.R")
source(paste("parameters/",runsname,".R",sep=""))
source(paste("fitcurve/",fitshape,".R",sep=""))
years.list=NULL
if(runType=="standard"){
years.list=yeargen.davis(best.temp = best.temp,sd.temp = sd.temp,
best.precip = best.precip,sd.precip = sd.precip)
} else if(runType=="unitTestConst"){
out=yeargen.const(numYears)
years.list=out[["years.list"]]
years.index=rep(1,numYears)
} else if (runType=="unitTestRand"){
out=yeargen.rand(numYears)
years.list=out[["years.list"]]
}
set_wrkdir()
years.indlist=read.csv(paste("enviromental histories/",yearSet,".csv",sep=""))
years.index=years.indlist$x-1913
#first, point-check
N=10000
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=rep(0,N)
for(i.trait in traits){
if(start[[i.trait]][1]==0 & start[[i.trait]][2]==0){
curvals=rep(0,N)
}else{
randnums=runif(n=N,min=start[[i.trait]][1],max=start[[i.trait]][2])
randnums[randnums==0]=1/(10^10)
curvals=randnums
}
curname=paste("b.",i.trait,sep="")
assign(curname,curvals)
}
newpop<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
yrfit=matrix(0,nrow=N,ncol=length(years.index))
for(i in 1:length(years.index)){
pop<-fitness(year=years.list[[years.index[i]]],newpop=newpop,duration=duration,traits=traits)
yrfit[,i]=pop$Wi
}
geofit=apply(yrfit,1,function(x){sum(log(x))})
ordpop=newpop[rev(order(geofit)),]
b.traits=sprintf("b.%s",traits)
topop=ordpop[1:fastnum,b.traits]
store=list()
for(i in 1:fastnum){
print(i)
store[[i]]=optim(par=topop[i,],fn=obj_fn,duration=duration,yrs=years.list[years.index],traits=traits)
}
i
store[[i]]=optim(par=topop[i,],fn=obj_fn,duration=duration,yrs=years.list[years.index],traits=traits)
topop[i,]
obj_fn(yrs=years.list[years.index],topop[i,],duration=duration)
obj_fn(yrs=years.list[years.index],topop[i,],duration=duration,traits=traits)
yrs=years.list[years.index];indiv=topop[i,];duration=duration;traits=traits
p
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
yrs=years.list[years.index];x=topop[i,];duration=duration;traits=traits
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
b.traits=sprintf("b.%s",traits)
indiv[b.traits]=x
yrfit=rep(0,length(yrs))
for(i in 1:length(yrs)){
yrfit=fitness(year=yrs[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
yrfit
yrs
length(yrs)
indiv
yrfit=rep(0,length(yrs))
for(i in 1:length(yrs)){
yrfit=fitness(year=yrs[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
yrfit
yrfit=rep(0,length(yrs))
for(i in 1:length(yrs)){
yrfit[i]=fitness(year=yrs[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
return(-sum(log(yrfit)))
yrfit
obj_fn<-function(x,duration,yrs,traits){
#takes individual, and the years that are to be used
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
b.traits=sprintf("b.%s",traits)
indiv[b.traits]=x
yrfit=rep(0,length(yrs))
for(i in 1:length(yrs)){
yrfit[i]=fitness(year=yrs[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
return(-sum(log(yrfit)))
}
store=list()
for(i in 1:fastnum){
print(i)
store[[i]]=optim(par=topop[i,],fn=obj_fn,duration=duration,yrs=years.list[years.index],traits=traits)
}
log(0)
obj_fn<-function(x,duration,yrs,traits){
#takes individual, and the years that are to be used
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
b.traits=sprintf("b.%s",traits)
indiv[b.traits]=x
yrfit=rep(0,length(yrs))
for(i in 1:length(yrs)){
yrfit[i]=fitness(year=yrs[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
return(-sum(log(yrfit+1/10^10)))
}
store=list()
for(i in 1:fastnum){
print(i)
store[[i]]=optim(par=topop[i,],fn=obj_fn,duration=duration,yrs=years.list[years.index],traits=traits)
}
store
newx=matrix(0,ncol=length(traits),nrow=fastnum)
names(newx)<-b.traits
newx
traits
newx=matrix(0,ncol=length(traits),nrow=fastnum)
colnames(newx)<-b.traits
newx
i=1
temp=store[[i]]
temp
res.fast=matrix(0,ncol=length(traits)+1,nrow=fastnum)
colnames(res.fast)<-c(vals,b.traits)
res.fast=matrix(0,ncol=length(traits)+1,nrow=fastnum)
colnames(res.fast)<-c("geofit",b.traits)
for(i in 1:length(store)){
temp=store[[i]]
res.fast[i,1]=temp$value
res.fast[i,2:length(traits)]=temp$par
}
for(i in 1:length(store)){
temp=store[[i]]
res.fast[i,1]=temp$value
res.fast[i,2:(length(traits)+1)]=temp$par
}
res.fast
res.fast=res.fast[order(res.fast$geofit),]
res.fast=res.fast[order(res.fast[,"geofit"]),]
res.fast
e^286.456
exp(286.456)
exp(286.517)
for(i in 1:fastnum){
print(i)
temp=store[[i]]=optim(par=res.fast[i,2:(1+length(traits)],fn=obj_fn,duration=duration,yrs=years.list[years.index],traits=traits)
res.fast[i,1]=temp$value
res.fast[i,2:(length(traits)+1)]=temp$par
for(i in 1:fastnum){
print(i)
temp=store[[i]]=optim(par=res.fast[i,2:(1+length(traits)],fn=obj_fn,duration=duration,yrs=years.list[years.index],traits=traits)
for(i in 1:fastnum){
print(i)
temp=store[[i]]=optim(par=res.fast[i,2:(1+length(traits))],fn=obj_fn,duration=duration,yrs=years.list[years.index],traits=traits)
res.fast[i,1]=temp$value
res.fast[i,2:(length(traits)+1)]=temp$par
}
store.fast=list()
res.slow=matrix(0,ncol=length(traits)+1,nrow=slownum)
colnames(res.fast)<-c("geofit",b.traits)
for(i in 1:slownum){
print(i)
temp=store[[i]]=optim(par=res.fast[i,2:(1+length(traits))],fn=obj_fn,duration=duration,
yrs=years.list[years.index],traits=traits,
control=list(maxit=50000,abstol=1/10^8))
res.fast[i,1]=temp$value
res.fast[i,2:(length(traits)+1)]=temp$par
}
newpop<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
yrfit=matrix(0,nrow=N,ncol=length(years.index))
for(i in 1:length(years.index)){
pop<-fitness(year=years.list[[years.index[i]]],newpop=newpop,duration=duration,traits=traits)
yrfit[,i]=pop$fit
}
geofit=apply(yrfit,1,function(x){-sum(log(x))})
ordpop=newpop[(order(geofit)),]
b.traits=sprintf("b.%s",traits)
topop=ordpop[1:fastnum,b.traits]
store.fast=list()
res.fast=matrix(0,ncol=length(traits)+1,nrow=fastnum)
colnames(res.fast)<-c("geofit",b.traits)
for(i in 1:fastnum){
print(i)
temp=store.fast[[i]]=optim(par=topop[i,],fn=obj_fn,duration=duration,yrs=years.list[years.index],traits=traits)
res.fast[i,1]=temp$value
res.fast[i,2:(length(traits)+1)]=temp$par
}
#NOTE: we are MINIMIZING the objective function, which is the NEGATVE of the log geometric fitness
res.fast=res.fast[order(res.fast[,"geofit"]),]
#finally, slow convergence
store.fast=list()
res.slow=matrix(0,ncol=length(traits)+1,nrow=slownum)
colnames(res.fast)<-c("geofit",b.traits)
for(i in 1:slownum){
print(i)
temp=store.slow[[i]]=optim(par=res.fast[i,2:(1+length(traits))],fn=obj_fn,duration=duration,
yrs=years.list[years.index],traits=traits,
control=list(maxit=50000,abstol=1/10^8))
res.slow[i,1]=temp$value
res.slow[i,2:(length(traits)+1)]=temp$par
}
newpop<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
yrfit=matrix(0,nrow=N,ncol=length(years.index))
for(i in 1:length(years.index)){
pop<-fitness(year=years.list[[years.index[i]]],newpop=newpop,duration=duration,traits=traits)
yrfit[,i]=pop$fit
}
geofit=apply(yrfit,1,function(x){-sum(log(x))})
ordpop=newpop[(order(geofit)),]
b.traits=sprintf("b.%s",traits)
topop=ordpop[1:fastnum,b.traits]
store.fast=list()
res.fast=matrix(0,ncol=length(traits)+1,nrow=fastnum)
colnames(res.fast)<-c("geofit",b.traits)
for(i in 1:fastnum){
print(i)
temp=store.fast[[i]]=optim(par=topop[i,],fn=obj_fn,duration=duration,yrs=years.list[years.index],traits=traits)
res.fast[i,1]=temp$value
res.fast[i,2:(length(traits)+1)]=temp$par
}
topop[1:5,]
newpop<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
yrfit=matrix(0,nrow=N,ncol=length(years.index))
for(i in 1:length(years.index)){
pop<-fitness(year=years.list[[years.index[i]]],newpop=newpop,duration=duration,traits=traits)
yrfit[,i]=pop$fit
}
geofit=apply(yrfit,1,function(x){-sum(log(x))})
ordpop=newpop[(order(geofit)),]
b.traits=sprintf("b.%s",traits)
topop=ordpop[1:fastnum,b.traits]
store.fast=list()
res.fast=matrix(0,ncol=length(traits)+1,nrow=fastnum)
colnames(res.fast)<-c("geofit",b.traits)
for(i in 1:fastnum){
print(i)
temp=store.fast[[i]]=optim(par=topop[i,],fn=obj_fn,duration=duration,yrs=years.list[years.index],traits=traits)
res.fast[i,1]=temp$value
res.fast[i,2:(length(traits)+1)]=temp$par
}
pop
i=1
newpop<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
yrfit=matrix(0,nrow=N,ncol=length(years.index))
for(i in 1:length(years.index)){
pop<-fitness(year=years.list[[years.index[i]]],newpop=newpop,duration=duration,traits=traits)
yrfit[i,]=pop$fit
}
yrfit
for(i in 1:length(years.index)){
pop<-fitness(year=years.list[[years.index[i]]],newpop=newpop,duration=duration,traits=traits)
yrfit[i,]=pop$fit
}
yrfit
yrfit=matrix(0,nrow=N,ncol=length(years.index))
for(i in 1:length(years.index)){
pop<-fitness(year=years.list[[years.index[i]]],newpop=newpop,duration=duration,traits=traits)
yrfit[,i]=pop$fit
}
yrfit
geofit=apply(yrfit,1,function(x){-sum(log(x))})
geofit
ordpop=newpop[(order(geofit)),]
ordpop
head(ordpop
)
newpop
N=10000
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=rep(0,N)
for(i.trait in traits){
if(start[[i.trait]][1]==0 & start[[i.trait]][2]==0){
curvals=rep(0,N)
}else{
randnums=runif(n=N,min=start[[i.trait]][1],max=start[[i.trait]][2])
randnums[randnums==0]=1/(10^10)
curvals=randnums
}
curname=paste("b.",i.trait,sep="")
assign(curname,curvals)
}
newpop<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
newpop
head(newpop)
yrfit=matrix(0,nrow=N,ncol=length(years.index))
for(i in 1:length(years.index)){
pop<-fitness(year=years.list[[years.index[i]]],newpop=newpop,duration=duration,traits=traits)
yrfit[,i]=pop$fit
}
geofit=apply(yrfit,1,function(x){-sum(log(x))})
ordpop=newpop[(order(geofit)),]
head(ordpop)
b.traits=sprintf("b.%s",traits)
topop=ordpop[1:fastnum,b.traits]
store.fast=list()
res.fast=matrix(0,ncol=length(traits)+1,nrow=fastnum)
colnames(res.fast)<-c("geofit",b.traits)
for(i in 1:fastnum){
print(i)
temp=store.fast[[i]]=optim(par=topop[i,],fn=obj_fn,duration=duration,yrs=years.list[years.index],traits=traits)
res.fast[i,1]=temp$value
res.fast[i,2:(length(traits)+1)]=temp$par
}
res.fast=res.fast[order(res.fast[,"geofit"]),]
resfast
res.fast
store.slow=list()
res.slow=matrix(0,ncol=length(traits)+1,nrow=slownum)
colnames(res.slow)<-c("geofit",b.traits)
for(i in 1:slownum){
print(i)
temp=store.slow[[i]]=optim(par=res.fast[i,2:(1+length(traits))],fn=obj_fn,duration=duration,
yrs=years.list[years.index],traits=traits,
control=list(maxit=50000,abstol=1/10^8))
res.slow[i,1]=temp$value
res.slow[i,2:(length(traits)+1)]=temp$par
}
res.slow
