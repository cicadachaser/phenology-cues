}
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\lhyang.ent-yang01\\SkyDrive\\Phenology simulation\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\lhyang\\Skydrive\\Phenology simulation\\phenology-cues")} #laptop
}
#Load sources file(s)
source("windows_subs.R")
#########################
# Simulation parameters #
#########################
#generations has been removed. instead simulation runs for the number of years in years.index
duration=10
best.temp=15; sd.temp=10; #The optimal temp and the sd for the temp-by-fitness curve (which is gaussian)
best.precip=55; sd.precip=30; #The optimal precip and the sd for the precip-by-fitness curve (which is gaussian)
N=40 #number of individuals
start<-data.frame(  #this represents the min and max values used when randomly assigning initial values to the population
constmin=0,constmax=5,
daymin=0,daymax=2,
tempmin=0,tempmax=10,
precipmin=0,precipmax=2)
sds<-data.frame( #standard deviations for trait mutations. Currently set so that variance = max initial trait value
const=sqrt(start$constmax),
day=sqrt(start$daymax),
temp=sqrt(start$tempmax),
precip=sqrt(start$precipmax))
mutrate<-data.frame( #probability of each trait mutating in an individual. Mutations are independent of one another
const=.1,
day=.1,
temp=.1,
precip=.1)
#input data
davis.daily<-read.csv("davis-data/626713.csv", header=T, na.strings="-9999")
davis.daily$PRCP<-davis.daily$PRCP/10 #precips are reported in tenths of mm
davis.daily$TMAX<-davis.daily$TMAX/10 #temps are reported in tenths of degree C
davis.daily$TMIN<-davis.daily$TMIN/10 #temps are reported in tenths of degree C
davis.daily$DATE2<-as.Date(as.character(davis.daily$DATE),format="%Y %m %d") #DATE2 is date formatted
davis.daily$JULIAN<-julian(davis.daily$DATE2,origin=as.Date("1892-12-31")) #1893-01-01 is day 1...
davis.daily$YEAR<-as.numeric(substr(davis.daily$DATE,1,4)) #simple field for year
davis.daily$MONTH<-as.numeric(substr(davis.daily$DATE,5,6)) #simple field for month
davis.daily$DAY<-as.numeric(substr(davis.daily$DATE,7,8)) #simple field for day
davis.daily<-davis.daily[,c("DATE2","JULIAN", "YEAR","MONTH","DAY","PRCP","TMAX","TMIN")] #simplified dataframe
davis.yearlist<-split(davis.daily,davis.daily$YEAR) #list of each year separated
#calculates the "day of year", i.e. Jan 1 is 1, and 12/31 is 365
#adds a DAY.OF.YEAR column to each dataframe in the year list
davis.yearnames<-unique(davis.daily$YEAR)
for (i in 1:length(davis.yearnames)){
davis.yearlist[[i]]$DAY.OF.YEAR<-julian(davis.yearlist[[i]]$DATE2, origin=as.Date(paste(davis.yearnames[i],"01","01",sep="-")))+1 #add +1 so that the first day of the year is 1, not zero.
}
yearlist.store=davis.yearlist
goodyears=NULL
for(iyear in davis.yearnames){
nacount=sum(sum(is.na(davis.yearlist[[as.character(iyear)]])))
daycount=dim(davis.yearlist[[as.character(iyear)]])[1]
if(nacount==0 & daycount>364){goodyears=c(goodyears,iyear)}
}
davis.yearlist=davis.yearlist[as.character(goodyears)]
davis.yearnames<-goodyears #gives a list of all the years in the data
davis.daily<-unsplit(yearlist.store,davis.daily$YEAR) #using legacy "yearlist.store" to make unsplit happy
# DAY.OF.YEAR=rep(0,dim(davis.daily)[1])
# for(i in 1:length(DAY.OF.YEAR)){
#   DAY.OF.YEAR[i]=sprintf("%02d%02d",davis.daily[i,"MONTH"],davis.daily[i,"DAY"])
#
# }
# davis.daily=cbind(davis.daily, DAY.OF.YEAR)
# davis.daily<-unsplit(davis.daily,davis.daily$YEAR)
davis.daily.means<-aggregate(cbind(TMAX,TMIN,PRCP)~DAY.OF.YEAR, data=davis.daily[davis.daily$YEAR %in% goodyears,], mean)
davis.yearvar<-data.frame(row.names=davis.yearnames) #dataframe to hold environmental variability
for (i in 1:length(davis.yearnames)){
#temporary dataframe to compare with mean conditions
#this creates a VAR.x for each year and a VAR.y for the daily means
comparison<-merge(davis.yearlist[[i]],davis.daily.means,by="DAY.OF.YEAR")
#number of complete cases (is.na=F) for each year
davis.yearvar[i,"TMAX.N"]<-sum(complete.cases(davis.yearlist[[i]]$TMAX))
davis.yearvar[i,"TMIN.N"]<-sum(complete.cases(davis.yearlist[[i]]$TMIN))
davis.yearvar[i,"PRCP.N"]<-sum(complete.cases(davis.yearlist[[i]]$PRCP))
#sum of squared differences with an average year - how weird is each year?
#some years have incomplete data, so this is the mean SS per observed day
davis.yearvar[i,"TMAX.SS"]<-(sum(comparison$TMAX.x-comparison$TMAX.y,na.rm=T)^2)/davis.yearvar[i,"TMAX.N"]
davis.yearvar[i,"TMIN.SS"]<-(sum(comparison$TMIN.x-comparison$TMIN.y,na.rm=T)^2)/davis.yearvar[i,"TMIN.N"]
davis.yearvar[i,"PRCP.SS"]<-(sum(comparison$PRCP.x-comparison$PRCP.y,na.rm=T)^2)/davis.yearvar[i,"PRCP.N"]
#CV within years - how variable is each year?
davis.yearvar[i,"TMAX.CV"]<-sd(comparison$TMAX.x,na.rm=T)/mean(comparison$TMAX.x,na.rm=T)
davis.yearvar[i,"TMIN.CV"]<-sd(comparison$TMIN.x,na.rm=T)/mean(comparison$TMIN.x,na.rm=T)
davis.yearvar[i,"PRCP.CV"]<-sd(comparison$PRCP.x,na.rm=T)/mean(comparison$PRCP.x,na.rm=T)
#sum of differences (not squared) with an average year - how hot/wet is each year?
#some years have incomplete data, so this is the mean difference per observed day
davis.yearvar[i,"TMAX.DEL"]<-sum(comparison$TMAX.x-comparison$TMAX.y,na.rm=T)/davis.yearvar[i,"TMAX.N"]
davis.yearvar[i,"TMIN.DEL"]<-sum(comparison$TMIN.x-comparison$TMIN.y,na.rm=T)/davis.yearvar[i,"TMIN.N"]
davis.yearvar[i,"PRCP.DEL"]<-sum(comparison$PRCP.x-comparison$PRCP.y,na.rm=T)/davis.yearvar[i,"PRCP.N"]
}
######################################################
# Import sequence of years - LOUIE'S STUFF GOES HERE #
######################################################
years.list=davis.yearlist #Replace this with code to grab a list of data frames. Each data frame is a year.
######################
# Fitness generation #
######################
#For now, daily incremental fitness will be found by multiplying two gaussian functions together:
#  one for temp, that's maximized at best.temp with sd tempsd
#  the other for precip that's maximized at best.precip with sd precipsd
# We will then normalize the results to vary from 0 to 1
for(i.year in 1:length(years.list)){
newyear=years.list[[i.year]]
newyear=newyear[,c("DAY.OF.YEAR","TMAX","PRCP")]
colnames(newyear)<-c("day","tmax","precip")
daily.fit=dnorm(newyear$tmax,mean=best.temp,sd=sd.temp)*dnorm(newyear$precip,mean=best.precip,sd=sd.precip)
daily.fit=(daily.fit-min(daily.fit))/(max(daily.fit)-min(daily.fit))
years.list[[i.year]]=cbind(newyear, fit.daily=daily.fit)
}
# Each year data frame has $day, $precip, $tmean, $tmax, $tmin
# This will be the same list for all configurations of years - this is essentially just our year database
years.index=c(1,2,3,4,5,6,7,8,9,10) # This is the list of which year.list data to use for each generation of the model
#######################
# initializing population
#######################
##intialize a population of N individuals
# Their min and max values are determined by the start$ parameters
b.const<-runif(n=N,min=start$constmin,max=start$constmax)
b.day<-runif(n=N,min=start$daymin,max=start$daymax)
b.temp<-runif(n=N,min=start$tempmin,max=start$tempmax)
b.precip<-runif(n=N,min=start$precipmin,max=start$precipmax)
newpop<-data.frame(b.const,b.day,b.temp,b.precip)
pop<-selection(newpop,duration,year=years.list[[1]],N)
## Run Simulation
pophistory=runSim(startpop=pop,years.list=years.list,
years.ind=years.index,N=N,duration=duration,
sds=sds,mutrate=mutrate,generations=length(years.index[-1]))
#we've already used year 1 in initiating the pop
plotting=FALSE
if(plotting){
windows()
hist(pophistory[[1]]$emerge,breaks=20)
windows()
hist(pophistory[[5]]$emerge,breaks=20)
windows()
hist(pophistory[[11]]$emerge,breaks=20)
}
pophistory[[1]]
pophistory[[1]]$Wp
sum(pophistory[[1]]$Wp)
years.list
years.list[[1]]
years.list[[1]]$fit.daily
plot(years.list[[1]]$fit.daily,type='l')
netfit=NULL
for(i.day in 1:365){net.fit=c(netfit,sum(years.list[[1]]$fit.daily[i.day:min(i.day+10,365)]))}
plot(netfit)
netfit
net.fit=NULL
for(i.day in 1:365){net.fit=c(net.fit,sum(years.list[[1]]$fit.daily[i.day:min(i.day+10,365)]))}
plot(net.fit,type="l")
net.fit=NULL
for(i.day in 1:365){net.fit=c(net.fit,sum(years.list[[2]]$fit.daily[i.day:min(i.day+10,365)]))}
plot(net.fit,type="l")
for(i.day in 1:365){net.fit=c(net.fit,sum(years.list[[5]]$fit.daily[i.day:min(i.day+10,365)]))}
net.fit=NULL
for(i.day in 1:365){net.fit=c(net.fit,sum(years.list[[5]]$fit.daily[i.day:min(i.day+10,365)]))}
plot(net.fit,type="l")
net.fit=NULL
for(i.day in 1:365){net.fit=c(net.fit,sum(years.list[[10]]$fit.daily[i.day:min(i.day+10,365)]))}
plot(net.fit,type="l")
pophistory[[5]]
pophistory[[5]]$emerge
net.fit=NULL
for(i.year in 1:10)
for(i.day in 1:365){net.fit=c(net.fit,sum(years.list[[10]]$fit.daily[i.day:min(i.day+10,365)]))}
plot(net.fit,type="l")
net.fit=NULL
# for(i.year in 1:10)
for(i.day in 1:365){net.fit=c(net.fit,sum(years.list[[10]]$fit.daily[i.day:min(i.day+10,365)]))}
plot(net.fit,type="l")
hist(pophistory[[1]]$emerge,breaks=360,add=TRUE)
load("C:/Users/louie/Documents/GitHub/phenology-cues/data-years/davisDat.Rdata")
#data input script
#reads climate data, truncates to 101 years, and imputes missing values
#clear all variables
rm(list=ls())
#libraries
library(timeDate)
library(Amelia)
library(parallel)
library(ggplot2)
# Set working directory ---------------------------------------------------
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin"){ #If it's collin
if(Sys.info()[1]=="Linux"){
setwd("/home/collin/Dropbox/Grad school/research projects/yang_cue")
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #SP4
}
# input data --------------------------------------------------------------
start.date<-as.Date("1914-01-01") #the dataset will start on 1914-01-01
end.date<-as.Date("2014-12-31") #the dataset will end on 2014-12-31
complete.dates<-data.frame(seq(start.date,end.date,1)) #all dates between the start and end dates
colnames(complete.dates)<-c("COMPLETE.DATES") #renaming the column
daily<-read.csv("davis-data/626713.csv", header=T, na.strings="-9999")
daily$DATE2<-as.Date(as.character(daily$DATE),format="%Y %m %d") #DATE2 is date formatted
daily<-merge(daily,complete.dates,by.x="DATE2",by.y="COMPLETE.DATES",all.y=TRUE) #add missing rows
daily$YEAR<-as.numeric(format(daily$DATE2,"%Y")) #simple field for year
daily$MONTH<-as.numeric(format(daily$DATE2,"%m")) #simple field for month
daily$DAY<-as.numeric(format(daily$DATE2,"%d")) #simple field for day
daily$DAY.OF.YEAR<-as.POSIXlt(daily$DATE2)$yday+1 #day of the year
daily$JULIAN<-julian(daily$DATE2,origin=start.date-1) #1914-01-01 is day 1
daily<-daily[daily$YEAR>1913 & daily$YEAR<2015,] #truncates the data to 101 complete years between 1914 and 2014
daily$PRCP<-daily$PRCP/10 #precips are reported in tenths of mm, units changed to mm
daily$TMAX<-daily$TMAX/10 #temps are reported in tenths of degree C, units changed to degree C
daily$TMIN<-daily$TMIN/10 #temps are reported in tenths of degree C, units changed to degree C
daily<-daily[,c("DATE2","JULIAN","YEAR","MONTH","DAY","DAY.OF.YEAR","PRCP","TMAX","TMIN")] #simplified dataframe
# imputation of missing data ----------------------------------------------
t.go<-proc.time()
a.out<-amelia(daily,m=5,ts="DAY.OF.YEAR",cs="YEAR",idvars=c("DATE2","MONTH","DAY","JULIAN"),intercs=T,splinetime=3,parallel = "snow", npcus=detectCores())
proc.time()-t.go
plot(a.out)
daily.means<-aggregate(cbind(TMAX,TMIN,PRCP)~DAY.OF.YEAR, data=a.out$imputations[[1]], mean)
qplot(x=DAY.OF.YEAR,y=TMAX,data=daily.means)
qplot(x=DAY.OF.YEAR,y=TMIN,data=daily.means)
qplot(x=DAY.OF.YEAR,y=PRCP,data=daily.means)
daily.imp<-a.out$imputations[[1]]
head(daily.imp)
min(daily.imp$PRCP)
ifelse(daily.imp$PRCP<0,0,daily.imp$PRCP)
ifelse(daily.imp$PRCP<0,0,daily.imp$PRCP)
?ifelse
daily.imp$PRCP<-ifelse(daily.imp$PRCP<0,0,daily.imp$PRCP)
min(daily.imp$PRCP)
daily.imp<-a.out$imputations[[1]]
daily.imp[daily.imp$PRCP<0,"PRCP"]<-0
min(daily.imp$PRCP)
daily.imp<-a.out$imputations[[1]]
daily.imp[daily.imp$PRCP<0,"PRCP"]
daily.means<-aggregate(cbind(TMAX,TMIN,PRCP)~DAY.OF.YEAR, data=daily.imp, mean)
qplot(x=DAY.OF.YEAR,y=TMAX,data=daily.means)
qplot(x=DAY.OF.YEAR,y=TMIN,data=daily.means)
qplot(x=DAY.OF.YEAR,y=PRCP,data=daily.means)
daily.means<-aggregate(cbind(TMAX,TMIN,PRCP)~DAY.OF.YEAR, data=daily.imp, mean)
min(daily.imp$PRCP)
daily.imp[daily.imp$PRCP<0,"PRCP"]<-0 #set all negative precip values to zero
min(daily.imp$PRCP)
daily.means<-aggregate(cbind(TMAX,TMIN,PRCP)~DAY.OF.YEAR, data=daily.imp, mean)
qplot(x=DAY.OF.YEAR,y=TMAX,data=daily.means)
qplot(x=DAY.OF.YEAR,y=TMIN,data=daily.means)
qplot(x=DAY.OF.YEAR,y=PRCP,data=daily.means)
davis.yearvar<-data.frame(row.names=davis.yearnames) #dataframe to hold environmental variability
yearvar<-data.frame(row.names=yearnames) #dataframe to hold environmental variability
yearnames<-unique(daily.imp$YEAR)
yearvar<-data.frame(row.names=yearnames) #dataframe to hold environmental variability
for (i in 1:length(yearnames)){
#dataframe to compare with mean conditions
#this creates a VAR.x for each year and a VAR.y for the daily means
comparison<-merge(yearlist[[i]],daily.means,by="DAY.OF.YEAR")
#sum of squared differences with an average year - how weird is each year?
davis.yearvar[i,"TMAX.SS"]<-sum(comparison$TMAX.x-comparison$TMAX.y)^2
davis.yearvar[i,"TMIN.SS"]<-sum(comparison$TMIN.x-comparison$TMIN.y)^2
davis.yearvar[i,"PRCP.SS"]<-sum(comparison$PRCP.x-comparison$PRCP.y)^2
#CV within years - how variable is each year?
davis.yearvar[i,"TMAX.CV"]<-sd(comparison$TMAX.x,na.rm=T)/mean(comparison$TMAX.x)
davis.yearvar[i,"TMIN.CV"]<-sd(comparison$TMIN.x,na.rm=T)/mean(comparison$TMIN.x)
davis.yearvar[i,"PRCP.CV"]<-sd(comparison$PRCP.x,na.rm=T)/mean(comparison$PRCP.x)
#sum of differences (not squared) with an average year - how hot/wet is each year?
davis.yearvar[i,"TMAX.DEL"]<-sum(comparison$TMAX.x-comparison$TMAX.y)
davis.yearvar[i,"TMIN.DEL"]<-sum(comparison$TMIN.x-comparison$TMIN.y)
davis.yearvar[i,"PRCP.DEL"]<-sum(comparison$PRCP.x-comparison$PRCP.y)
}
SS<-function(each.year,mean.year){sum(each.year-mean.year)^2}
SS(daily.imp["1915",daily.means])
SS(daily.imp["1915",]daily.means)
SS(daily.imp["1915",],daily.means)
daily.imp["1915",]
SS(daily.imp[daily.imp$YEAR==1915,],daily.means)
yearnames<-unique(daily.imp$YEAR) #vector of years
yearlist<-split(daily.imp,daily.imp$YEAR) #list of each year separated
yearvar<-data.frame(row.names=yearnames) #dataframe to hold environmental variability
for (i in 1:length(yearnames)){
#dataframe to compare with mean conditions
#this creates a VAR.x for each year and a VAR.y for the daily means
comparison<-merge(yearlist[[i]],daily.means,by="DAY.OF.YEAR")
#sum of squared differences with an average year - how weird is each year?
davis.yearvar[i,"TMAX.SS"]<-sum(comparison$TMAX.x-comparison$TMAX.y)^2
davis.yearvar[i,"TMIN.SS"]<-sum(comparison$TMIN.x-comparison$TMIN.y)^2
davis.yearvar[i,"PRCP.SS"]<-sum(comparison$PRCP.x-comparison$PRCP.y)^2
#CV within years - how variable is each year?
davis.yearvar[i,"TMAX.CV"]<-sd(comparison$TMAX.x)/mean(comparison$TMAX.x)
davis.yearvar[i,"TMIN.CV"]<-sd(comparison$TMIN.x)/mean(comparison$TMIN.x)
davis.yearvar[i,"PRCP.CV"]<-sd(comparison$PRCP.x)/mean(comparison$PRCP.x)
#sum of differences (not squared) with an average year - how hot/wet is each year?
davis.yearvar[i,"TMAX.DEL"]<-sum(comparison$TMAX.x-comparison$TMAX.y)
davis.yearvar[i,"TMIN.DEL"]<-sum(comparison$TMIN.x-comparison$TMIN.y)
davis.yearvar[i,"PRCP.DEL"]<-sum(comparison$PRCP.x-comparison$PRCP.y)
}
for (i in 1:length(yearnames)){
#dataframe to compare with mean conditions
#this creates a VAR.x for each year and a VAR.y for the daily means
comparison<-merge(yearlist[[i]],daily.means,by="DAY.OF.YEAR")
#sum of squared differences with an average year - how weird is each year?
yearvar[i,"TMAX.SS"]<-sum(comparison$TMAX.x-comparison$TMAX.y)^2
yearvar[i,"TMIN.SS"]<-sum(comparison$TMIN.x-comparison$TMIN.y)^2
yearvar[i,"PRCP.SS"]<-sum(comparison$PRCP.x-comparison$PRCP.y)^2
#CV within years - how variable is each year?
yearvar[i,"TMAX.CV"]<-sd(comparison$TMAX.x)/mean(comparison$TMAX.x)
yearvar[i,"TMIN.CV"]<-sd(comparison$TMIN.x)/mean(comparison$TMIN.x)
yearvar[i,"PRCP.CV"]<-sd(comparison$PRCP.x)/mean(comparison$PRCP.x)
#sum of differences (not squared) with an average year - how hot/wet is each year?
yearvar[i,"TMAX.DEL"]<-sum(comparison$TMAX.x-comparison$TMAX.y)
yearvar[i,"TMIN.DEL"]<-sum(comparison$TMIN.x-comparison$TMIN.y)
yearvar[i,"PRCP.DEL"]<-sum(comparison$PRCP.x-comparison$PRCP.y)
}
View(yearvar)
yearlist[[1]]$TMAX-daily.means[1]
yearlist[[1]]$TMAX
daily.means[1]
daily.means$TMAX
yearlist[[1]]$TMAX-daily.means[TMAX]
yearlist[[1]]$TMAX-daily.means$TMAX
yearlist[[1]]$TMAX
daily.means$TMAX
?merge
for (i in 1:length(yearnames)){
#dataframe to compare with mean conditions
#this creates a VAR.x for each year and a VAR.y for the daily means
comparison<-merge(yearlist[[i]],daily.means,by="DAY.OF.YEAR")
#sum of squared differences with an average year - how weird is each year?
yearvar[i,"TMAX.SS"]<-sum((comparison$TMAX.x-comparison$TMAX.y)^2)
yearvar[i,"TMIN.SS"]<-sum((comparison$TMIN.x-comparison$TMIN.y)^2)
yearvar[i,"PRCP.SS"]<-sum((comparison$PRCP.x-comparison$PRCP.y)^2)
#CV within years - how variable is each year?
yearvar[i,"TMAX.CV"]<-sd(comparison$TMAX.x)/mean(comparison$TMAX.x)
yearvar[i,"TMIN.CV"]<-sd(comparison$TMIN.x)/mean(comparison$TMIN.x)
yearvar[i,"PRCP.CV"]<-sd(comparison$PRCP.x)/mean(comparison$PRCP.x)
#sum of differences (not squared) with an average year - how hot/wet is each year?
yearvar[i,"TMAX.DEL"]<-sum(comparison$TMAX.x-comparison$TMAX.y)
yearvar[i,"TMIN.DEL"]<-sum(comparison$TMIN.x-comparison$TMIN.y)
yearvar[i,"PRCP.DEL"]<-sum(comparison$PRCP.x-comparison$PRCP.y)
}
View(yearvar)
cumsum(daily.imp$TMAX)
aggregate(TMAX~YEAR,data=daily.imp,cumsum)
length(aggregate(TMAX~YEAR,data=daily.imp,cumsum))
temp<-aggregate(TMAX~YEAR,data=daily.imp,cumsum)
for (i in 1:length(yearnames)){
#dataframe to compare with mean conditions
#this creates a VAR.x for each year and a VAR.y for the daily means
comparison<-merge(yearlist[[i]],daily.means,by="DAY.OF.YEAR")
#sum of squared differences with an average year - how weird is each year?
yearvar[i,"TMAX.SS"]<-sum((comparison$TMAX.x-comparison$TMAX.y)^2)
yearvar[i,"TMIN.SS"]<-sum((comparison$TMIN.x-comparison$TMIN.y)^2)
yearvar[i,"PRCP.SS"]<-sum((comparison$PRCP.x-comparison$PRCP.y)^2)
#CV within years - how variable is each year?
yearvar[i,"TMAX.CV"]<-sd(comparison$TMAX.x)/mean(comparison$TMAX.x)
yearvar[i,"TMIN.CV"]<-sd(comparison$TMIN.x)/mean(comparison$TMIN.x)
yearvar[i,"PRCP.CV"]<-sd(comparison$PRCP.x)/mean(comparison$PRCP.x)
#sum of differences (not squared) with an average year - how hot/wet is each year?
yearvar[i,"TMAX.DEL"]<-sum(comparison$TMAX.x-comparison$TMAX.y)
yearvar[i,"TMIN.DEL"]<-sum(comparison$TMIN.x-comparison$TMIN.y)
yearvar[i,"PRCP.DEL"]<-sum(comparison$PRCP.x-comparison$PRCP.y)
#annual totals
yearvar[i,"TMAX.TOT"]<-max(cumsum(comparison$TMAX.x))
yearvar[i,"TMIN.TOT"]<-max(cumsum(comparison$TMIN.x))
yearvar[i,"PRCP.TOT"]<-max(cumsum(comparison$PRCP.x))
}
View(yearvar)
for (i in 1:length(yearnames)){
#dataframe to compare with mean conditions
#this creates a VAR.x for each year and a VAR.y for the daily means
comparison<-merge(yearlist[[i]],daily.means,by="DAY.OF.YEAR")
#sum of squared differences with an average year - how weird is each year?
yearvar[i,"TMAX.SS"]<-sum((comparison$TMAX.x-comparison$TMAX.y)^2)
yearvar[i,"TMIN.SS"]<-sum((comparison$TMIN.x-comparison$TMIN.y)^2)
yearvar[i,"PRCP.SS"]<-sum((comparison$PRCP.x-comparison$PRCP.y)^2)
#CV within years - how variable is each year?
yearvar[i,"TMAX.CV"]<-sd(comparison$TMAX.x)/mean(comparison$TMAX.x)
yearvar[i,"TMIN.CV"]<-sd(comparison$TMIN.x)/mean(comparison$TMIN.x)
yearvar[i,"PRCP.CV"]<-sd(comparison$PRCP.x)/mean(comparison$PRCP.x)
#sum of differences (not squared) with an average year - how hot/wet is each year?
yearvar[i,"TMAX.DEL"]<-sum(comparison$TMAX.x-comparison$TMAX.y)
yearvar[i,"TMIN.DEL"]<-sum(comparison$TMIN.x-comparison$TMIN.y)
yearvar[i,"PRCP.DEL"]<-sum(comparison$PRCP.x-comparison$PRCP.y)
#annual totals
yearvar[i,"TMAX.TOT"]<-max(cumsum(comparison$TMAX.x))
yearvar[i,"TMIN.TOT"]<-max(cumsum(comparison$TMIN.x))
yearvar[i,"PRCP.TOT"]<-max(cumsum(comparison$PRCP.x))
#spring totals
yearvar[i,"TMAX.SPR"]<-max(cumsum(comparison$TMAX.x[1:120]))
yearvar[i,"TMIN.SPR"]<-max(cumsum(comparison$TMIN.x[1:120]))
yearvar[i,"PRCP.SPR"]<-max(cumsum(comparison$PRCP.x[1:120]))
}
View(yearvar)
View(yearvar)
with(daily.imp,plot(tmax.tot,tmax.del))
plot(daily.imp$tmax.tot,daily.imp$tmax.del)
plot(yearvar$tmax.tot,yearvar$tmax.del)
yearvar$tmax.tot
plot(yearvar$TMAX.TOT,yearvar$TMAX.DEL)
?max
?tail
ODD<-head(yearvar[order(yearvar$TMAX.SS),],25)
View(ODD)
STRANGE.YEARS<-tail(yearvar[order(yearvar$TMAX.SS),],25) #25 least normal years
NORMAL.YEARS<-head(yearvar[order(yearvar$TMAX.SS),],25) #25 most normal years
View(STRANGE.YEARS)
View(STRANGE.YEARS)
View(STRANGE.YEARS)
View(STRANGE.YEARS)
STRANGE.YEARS<-rownames(tail(yearvar[order(yearvar$TMAX.SS),],25)) #25 least normal years
#data input script
#reads climate data, truncates to 101 years, and imputes missing values
#clear all variables
rm(list=ls())
#libraries
library(timeDate)
library(Amelia)
library(parallel)
library(ggplot2)
# Set working directory ---------------------------------------------------
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin"){ #If it's collin
if(Sys.info()[1]=="Linux"){
setwd("/home/collin/Dropbox/Grad school/research projects/yang_cue")
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #SP4
}
# input data --------------------------------------------------------------
start.date<-as.Date("1914-01-01") #the dataset will start on 1914-01-01
end.date<-as.Date("2014-12-31") #the dataset will end on 2014-12-31
complete.dates<-data.frame(seq(start.date,end.date,1)) #all dates between the start and end dates
colnames(complete.dates)<-c("COMPLETE.DATES") #renaming the column
daily<-read.csv("davis-data/626713.csv", header=T, na.strings="-9999")
daily$DATE2<-as.Date(as.character(daily$DATE),format="%Y %m %d") #DATE2 is date formatted
daily<-merge(daily,complete.dates,by.x="DATE2",by.y="COMPLETE.DATES",all.y=TRUE) #add missing rows
daily$YEAR<-as.numeric(format(daily$DATE2,"%Y")) #simple field for year
daily$MONTH<-as.numeric(format(daily$DATE2,"%m")) #simple field for month
daily$DAY<-as.numeric(format(daily$DATE2,"%d")) #simple field for day
daily$DAY.OF.YEAR<-as.POSIXlt(daily$DATE2)$yday+1 #day of the year
daily$JULIAN<-julian(daily$DATE2,origin=start.date-1) #1914-01-01 is day 1
daily<-daily[daily$YEAR>1913 & daily$YEAR<2015,] #truncates the data to 101 complete years between 1914 and 2014
daily$PRCP<-daily$PRCP/10 #precips are reported in tenths of mm, units changed to mm
daily$TMAX<-daily$TMAX/10 #temps are reported in tenths of degree C, units changed to degree C
daily$TMIN<-daily$TMIN/10 #temps are reported in tenths of degree C, units changed to degree C
daily<-daily[,c("DATE2","JULIAN","YEAR","MONTH","DAY","DAY.OF.YEAR","PRCP","TMAX","TMIN")] #simplified dataframe
# imputation of missing data ----------------------------------------------
a.out<-amelia(daily,m=1,ts="DAY.OF.YEAR",cs="YEAR",idvars=c("DATE2","MONTH","DAY","JULIAN"),intercs=T,splinetime=3,parallel = "snow", npcus=detectCores())
daily.imp<-a.out$imputations[[1]]
daily.imp[daily.imp$PRCP<0,"PRCP"]<-0 #set all negative precip values to zero
# descriptive statistics --------------------------------------------------
daily.means<-aggregate(cbind(TMAX,TMIN,PRCP)~DAY.OF.YEAR, data=daily.imp, mean)
qplot(x=DAY.OF.YEAR,y=TMAX,data=daily.means)
qplot(x=DAY.OF.YEAR,y=TMIN,data=daily.means)
qplot(x=DAY.OF.YEAR,y=PRCP,data=daily.means)
yearnames<-unique(daily.imp$YEAR) #vector of years
yearlist<-split(daily.imp,daily.imp$YEAR) #list of each year separated
yearvar<-data.frame(row.names=yearnames) #dataframe to hold environmental variability
for (i in 1:length(yearnames)){
#dataframe to compare with mean conditions
#this creates a VAR.x for each year and a VAR.y for the daily means
comparison<-merge(yearlist[[i]],daily.means,by="DAY.OF.YEAR")
#sum of squared differences with an average year - how weird is each year?
yearvar[i,"TMAX.SS"]<-sum((comparison$TMAX.x-comparison$TMAX.y)^2)
yearvar[i,"TMIN.SS"]<-sum((comparison$TMIN.x-comparison$TMIN.y)^2)
yearvar[i,"PRCP.SS"]<-sum((comparison$PRCP.x-comparison$PRCP.y)^2)
#CV within years - how variable is each year?
yearvar[i,"TMAX.CV"]<-sd(comparison$TMAX.x)/mean(comparison$TMAX.x)
yearvar[i,"TMIN.CV"]<-sd(comparison$TMIN.x)/mean(comparison$TMIN.x)
yearvar[i,"PRCP.CV"]<-sd(comparison$PRCP.x)/mean(comparison$PRCP.x)
#sum of differences (not squared) with an average year - how hot/wet is each year?
yearvar[i,"TMAX.DEL"]<-sum(comparison$TMAX.x-comparison$TMAX.y)
yearvar[i,"TMIN.DEL"]<-sum(comparison$TMIN.x-comparison$TMIN.y)
yearvar[i,"PRCP.DEL"]<-sum(comparison$PRCP.x-comparison$PRCP.y)
#annual totals
yearvar[i,"TMAX.TOT"]<-max(cumsum(comparison$TMAX.x))
yearvar[i,"TMIN.TOT"]<-max(cumsum(comparison$TMIN.x))
yearvar[i,"PRCP.TOT"]<-max(cumsum(comparison$PRCP.x))
#spring totals
yearvar[i,"TMAX.SPR"]<-max(cumsum(comparison$TMAX.x[1:120]))
yearvar[i,"TMIN.SPR"]<-max(cumsum(comparison$TMIN.x[1:120]))
yearvar[i,"PRCP.SPR"]<-max(cumsum(comparison$PRCP.x[1:120]))
}
# generating some environmental histories ---------------------------------
STRANGE.YEARS<-rownames(tail(yearvar[order(yearvar$TMAX.SS),],25)) #25 least normal years
strange.25<-rownames(tail(yearvar[order(yearvar$TMAX.SS),],25)) #25 least normal years
strange.25
strange.25<-as.numeric(rownames(tail(yearvar[order(yearvar$TMAX.SS),],25))) #25 least normal years
strange.25
normal.25<-as.numeric(rownames(head(yearvar[order(yearvar$TMAX.SS),],25))) #25 most normal years
hot.25<-as.numeric(rownames(head(yearvar[order(yearvar$TMAX.DEL),],25))) #25 hottest TMAX years
hot.25
head(yearvar[order(yearvar$TMAX.DEL),],25))
head(yearvar[order(yearvar$TMAX.DEL),],25))
head(yearvar[order(yearvar$TMAX.DEL),],25)
hot.25<-as.numeric(rownames(tail(yearvar[order(yearvar$TMAX.DEL),],25))) #25 hottest TMAX years
cool.25<-as.numeric(rownames(head(yearvar[order(yearvar$TMAX.DEL),],25))) #25 coolest TMAX years
hot.cold.50<-rbind(hot.25,cool.25)
hot.25
?median_hilow
?head
goldilocks.50<-as.numeric(rownames(head(yearvar[order(abs(yearvar$TMAX.DEL)),],25)))
goldilocks.50
head(yearvar[order(abs(yearvar$TMAX.DEL)),],25))
head(yearvar[order(abs(yearvar$TMAX.DEL)),],25)
hot.cold.50
hot.cold.50<-c(hot.25,cool.25)
hot.cold.50
