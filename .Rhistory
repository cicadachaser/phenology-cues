yearstd=as.factor(overall.res$yearstd),
trait=overall.res$trait),
FUN=mean)
oldtrait=oldtrait$x
# varmeans=aggregate(as.numeric(overall.res$geofit),
setwd("G:/Repos/phenology-cues/results/fig1/opt3-2yr-comp1listlist")
load("fig1dat-versionopt3-2yr-comp1listlist.Rdata",envir=opt<-new.env())
opt.varmeans=opt$overall.res[order(opt$overall.res$yearstd,opt$overall.res$daystd,opt$overall.res$trait),]
setwd("G:/Repos/phenology-cues/results/fig1/compare3-2yr")
load("fig1dat-versioncompare3-2yr.Rdata",envir=brute<-new.env())
overall.res=brute$overall.res
varmeans=aggregate(as.numeric(overall.res$geofit),
by=list(daystd=as.factor(overall.res$daystd),
yearstd=as.factor(overall.res$yearstd),
trait=overall.res$trait),
FUN=mean)
varmeans$yearstd=as.numeric(as.character(varmeans$yearstd))
varmeans$daystd=as.numeric(as.character(varmeans$daystd))
varmeans$x=as.numeric(as.character(varmeans$x))
varpts=unique(varmeans[,c("daystd","yearstd")])
varmeans=cbind(varmeans,oldtrait)
varmeans=varmeans[order(varmeans$yearstd,varmeans$daystd,varmeans$trait),]
brute$varmeans=varmeans
varcompare=cbind(varmeans, opt.varmeans[,c("geofit","traitval")])
names(varcompare)[4:7]=c("geofit.old","traital.old","geofit.new","traitval.new")
varcompare=cbind(varcompare,res.diff=varcompare$geofit.old+varcompare$geofit.new)
varcompare$geofit.old=-varcompare$geofit.old
varcompare=cbind(varcompare,frac.diff=varcompare$res.diff/mean(varcompare$geofit.old+varcompare$geofit.new))
names(varcompare)[9]="frac.diff"
warnings()
varcompare
varcompare[varcompare$frac.diff>0,]
varcompare[varcompare$frac.diff<0,]
fit_temp=function(years.list){
#checking my functional code
numYears=length(years.list)
ptstore=rep(0,365*numYears)
for(i.list in 1:numYears){
ptstore[((i.list-1)*365+1):(i.list*365)]=cummax(years.list[[i.list]][,"temp"])
}
ptstore=sort(unique(ptstore))
testpts=ptstore[-length(ptstore)]+diff(ptstore)/2 #take midpoint between each ptstore
fitstore=matrix(0,ncol=length(testpts),nrow=numYears)
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=rep(0,length(testpts))
# start with traits = 0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
# create "empty" individual
traits="temp"
b.traits=sprintf("b.%s",traits)  # list of traits in b.day format
indiv[,b.traits]=testpts #fill in the values for the traits we're actually using
yrfit=matrix(0,nrow=length(years.list),ncol=length(testpts)) #initialize vector for storing yearly fitness
for(i in 1:length(years.list)){ #iterate through all years, calculate fitness for each
yrfit[i,]=fitness(year=years.list[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
geofit=apply(log(fitstore),2,sum)
return(c(geofit=max(geofit),b.temp=testpts[geofit==max(geofit)][1]))
}
fit.temp=fit_temp(years.list)
fit.temp-opt.temp2
fit.temp
fit.temp=fit_temp(years.list)
fit.temp-opt.temp2
fit.temp=fit_temp(years.list)
fit_temp=function(years.list){
#Use fitness function to test all points of interest
numYears=length(years.list)
ptstore=rep(0,365*numYears)
for(i.list in 1:numYears){
ptstore[((i.list-1)*365+1):(i.list*365)]=cummax(years.list[[i.list]][,"temp"])
}
ptstore=sort(unique(ptstore))
testpts=ptstore[-length(ptstore)]+diff(ptstore)/2 #take midpoint between each ptstore
fitstore=matrix(0,ncol=length(testpts),nrow=numYears)
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=rep(0,length(testpts))
# start with traits = 0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
# create "empty" individual
traits="temp"
b.traits=sprintf("b.%s",traits)  # list of traits in b.day format
indiv[,b.traits]=testpts #fill in the values for the traits we're actually using
yrfit=matrix(0,nrow=length(years.list),ncol=length(testpts)) #initialize vector for storing yearly fitness
for(i in 1:length(years.list)){ #iterate through all years, calculate fitness for each
yrfit[i,]=fitness(year=years.list[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
geofit=apply(log(fitstore),2,sum)
return(geofit)
# return(c(geofit=max(geofit),b.temp=testpts[geofit==max(geofit)][1]))
}
fit.temp=fit_temp(years.list)
fit.temp-opt.temp2
fit.temp
years.list
numYears=length(years.list)
ptstore=rep(0,365*numYears)
for(i.list in 1:numYears){
}
ptstore[((i.list-1)*365+1):(i.list*365)]=cummax(years.list[[i.list]][,"temp"])
ptstore=sort(unique(ptstore))
testpts=ptstore[-length(ptstore)]+diff(ptstore)/2 #take midpoint between each ptstore
fitstore=matrix(0,ncol=length(testpts),nrow=numYears)
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=rep(0,length(testpts))
# start with traits = 0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
# create "empty" individual
traits="temp"
b.traits=sprintf("b.%s",traits)  # list of traits in b.day format
indiv[,b.traits]=testpts #fill in the values for the traits we're actually using
yrfit=matrix(0,nrow=length(years.list),ncol=length(testpts)) #initialize vector for storing yearly fitness
yr.fit
yrfit
fit_temp=function(years.list){
#Use fitness function to test all points of interest
numYears=length(years.list)
ptstore=rep(0,365*numYears)
for(i.list in 1:numYears){
ptstore[((i.list-1)*365+1):(i.list*365)]=cummax(years.list[[i.list]][,"temp"])
}
ptstore=sort(unique(ptstore))
testpts=ptstore[-length(ptstore)]+diff(ptstore)/2 #take midpoint between each ptstore
fitstore=matrix(0,ncol=length(testpts),nrow=numYears)
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=rep(0,length(testpts))
# start with traits = 0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
# create "empty" individual
traits="temp"
b.traits=sprintf("b.%s",traits)  # list of traits in b.day format
indiv[,b.traits]=testpts #fill in the values for the traits we're actually using
yrfit=matrix(0,nrow=length(years.list),ncol=length(testpts)) #initialize vector for storing yearly fitness
for(i in 1:length(years.list)){ #iterate through all years, calculate fitness for each
yrfit[i,]=fitness(year=years.list[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
geofit=apply(log(yrfit),2,sum)
return(geofit)
# return(c(geofit=max(geofit),b.temp=testpts[geofit==max(geofit)][1]))
}
fit.temp=fit_temp(years.list)
fit.temp-opt.temp2
fit.temp-geofit.old
opt.temp2-geofit.new
numYears=length(years.list)
ptstore=rep(0,365*numYears)
for(i.list in 1:numYears){
ptstore[((i.list-1)*365+1):(i.list*365)]=cummax(years.list[[i.list]][,"temp"])
}
ptstore=sort(unique(ptstore))
testpts=ptstore[-length(ptstore)]+diff(ptstore)/2 #take midpoint between each ptstore
fitstore=matrix(0,ncol=length(testpts),nrow=numYears)
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=rep(0,length(testpts))
# start with traits = 0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
# create "empty" individual
traits="temp"
b.traits=sprintf("b.%s",traits)  # list of traits in b.day format
indiv[,b.traits]=testpts #fill in the values for the traits we're actually using
yrfit=matrix(0,nrow=length(years.list),ncol=length(testpts)) #initialize vector for storing yearly fitness
indiv
indiv$b.temp
testpts
for(i in 1:length(years.list)){ #iterate through all years, calculate fitness for each
yrfit[i,]=fitness(year=years.list[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
duration
traits
length(years.list)
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=rep(0,length(testpts))
# start with traits = 0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
# create "empty" individual
traits="temp"
b.traits=sprintf("b.%s",traits)  # list of traits in b.day format
indiv[,b.traits]=testpts #fill in the values for the traits we're actually using
yrfit=matrix(0,nrow=length(years.list),ncol=length(testpts)) #initialize vector for storing yearly fitness
for(i in 1:length(years.list)){ #iterate through all years, calculate fitness for each
yrfit[i,]=fitness(year=years.list[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
geofit.old=apply(log(yrfit),2,sum)
geofit.old-geofit.new
#Make sure to source prepstuff.R
load("G:/Repos/phenology-cues/results/fig1/opt3-2yr-comp1listlist/fig1dat-versionopt3-2yr-comp1listlist_new.Rdata")
source('G:/Repos/phenology-cues/scripts/windows_subs.R', encoding = 'UTF-8')
require(zoo)
duration=10;lag=1
years.list=yearlistlist[[5]]
#recalculate fit.tot with lag included
for(i.ylist in 1:length(years.list)){
years.list[[i.ylist]]=years.list[[i.ylist]][,-which(names(years.list[[i.ylist]])=="fit.tot")]
fit.tot=c(rollapply(c(years.list[[i.ylist]]$fit.daily,rep(0,duration-1)),duration,by=1,sum))
fit.tot=c(fit.tot[-(1:lag)],rep(0,lag))#for lag of 1
years.list[[i.ylist]]=cbind(years.list[[i.ylist]],fit.tot=fit.tot)
}
numYears=length(years.list)
ptstore=rep(0,365*numYears)
for(i.list in 1:numYears){
ptstore[((i.list-1)*365+1):(i.list*365)]=cummax(years.list[[i.list]][,"temp"])
}
ptstore=sort(unique(ptstore))
testpts=ptstore[-length(ptstore)]+diff(ptstore)/2 #take midpoint between each ptstore
#New approach:
fitstore=matrix(0,ncol=length(testpts),nrow=numYears)
for(i.list in 1:numYears){
#fitting piecewise function of day~cutemp, but add in extreme endpoints to avoid extrapolation issues
#First, though, need to remove duplicates, and create a way to map to the appropriate day
cmaxtemp=cummax(years.list[[i.list]][,"temp"]) #cumulative maximum temp
unik <- !duplicated(cmaxtemp)  ## logical vector of unique values (where first appearance of number is "unique"
mapseq=seq_along(cmaxtemp)[unik]  ## indices of these uniques
cmaxtemp=cmaxtemp[unik] #version of cmaxtemp
fcur=approxfun(x=c(-10,cmaxtemp,max(testpts)*1.1),
y=c(0,1:(length(cmaxtemp)+1)))
ind=ceiling(fcur(testpts)) #indices to map to appropriate days of year using mapseq
days=c(1,mapseq,365)[ind+1]
fit=years.list[[i.list]][days,"fit.tot"]
fit[is.na(fit)]=0
fitstore[i.list,]=fit
}
geofit.new=apply(log(fitstore),2,sum)
#Old approach:
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=rep(0,length(testpts))
# start with traits = 0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
# create "empty" individual
traits="temp"
b.traits=sprintf("b.%s",traits)  # list of traits in b.day format
indiv[,b.traits]=testpts #fill in the values for the traits we're actually using
yrfit=matrix(0,nrow=length(years.list),ncol=length(testpts)) #initialize vector for storing yearly fitness
for(i in 1:length(years.list)){ #iterate through all years, calculate fitness for each
yrfit[i,]=fitness(year=years.list[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
geofit.old=apply(log(yrfit),2,sum)
geofit.old-geofit.new
source('G:/Repos/phenology-cues/scripts/var_exper/prepstuff.R', encoding = 'UTF-8')
#Now confirming that the prepstuff version works:
official.temp=opt_temp(years.list)
opt.temp2=opt_temp2(years.list)
fit.temp=fit_temp(years.list)
fit.temp-opt.temp2
fit_cutemp<-function(years.list){
numYears=length(years.list)
ptstore=rep(0,365*numYears)
for(i.list in 1:numYears){
ptstore[((i.list-1)*365+1):(i.list*365)]=years.list[[i.list]][,"cutemp"]
}
ptstore=sort(unique(ptstore))
testpts=ptstore[-length(ptstore)]+diff(ptstore)/2 #take midpoint between each ptstore
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=rep(0,length(testpts))
# start with traits = 0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
# create "empty" individual
traits="cutemp"
b.traits=sprintf("b.%s",traits)  # list of traits in b.day format
indiv[,b.traits]=testpts #fill in the values for the traits we're actually using
yrfit=matrix(0,nrow=length(years.list),ncol=length(testpts)) #initialize vector for storing yearly fitness
for(i in 1:length(years.list)){ #iterate through all years, calculate fitness for each
yrfit[i,]=fitness(year=years.list[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
geofit=apply(log(yrfit),2,sum)
return(geofit)
# return(c(geofit=max(geofit),b.temp=testpts[geofit==max(geofit)][1]))
}
opt.cutemp=opt_cutemp(years.list)
opt_cutemp<-function(years.list){
numYears=length(years.list)
ptstore=rep(0,365*numYears)
for(i.list in 1:numYears){
ptstore[((i.list-1)*365+1):(i.list*365)]=years.list[[i.list]][,"cutemp"]
}
ptstore=sort(unique(ptstore))
testpts=ptstore[-length(ptstore)]+diff(ptstore)/2 #take midpoint between each ptstore
fitstore=matrix(0,ncol=length(testpts),nrow=numYears)
for(i.list in 1:numYears){
#fitting piecewise function of day~cutemp, but add in extreme endpoints to avoid extrapolation issues
cmaxcutemp=cummax(years.list[[i.list]][,"cutemp"]) #cumulative maximum temp
unik <- !duplicated(cmaxcutemp)  ## logical vector of unique values (where first appearance of number is "unique"
mapseq=seq_along(cmaxcutemp)[unik]  ## indices of these uniques
cmaxcutemp=cmaxcutemp[unik] #version of cmaxtemp
fcur=approxfun(x=c(-10,cmaxcutemp,max(testpts)*1.1),
y=c(0,1:(length(cmaxcutemp)+1)))
ind=ceiling(fcur(testpts)) #indices to map to appropriate days of year using mapseq
days=c(1,mapseq,365)[ind+1]
fit=years.list[[i.list]][days,"fit.tot"]
fitstore[i.list,]=fit
}
geofit=apply(log(fitstore),2,sum)
# plot(testpts,geofit,type='l')
return(geofit)
# return(c(geofit=max(geofit),b.cutemp=testpts[geofit==max(geofit)][1]))
}
fit_cutemp<-function(years.list){
numYears=length(years.list)
ptstore=rep(0,365*numYears)
for(i.list in 1:numYears){
ptstore[((i.list-1)*365+1):(i.list*365)]=years.list[[i.list]][,"cutemp"]
}
ptstore=sort(unique(ptstore))
testpts=ptstore[-length(ptstore)]+diff(ptstore)/2 #take midpoint between each ptstore
b.day=b.temp=b.precip=b.cutemp=b.cuprecip=b.daysq=b.tempsq=b.precipsq=b.cutempsq=b.cuprecipsq=rep(0,length(testpts))
# start with traits = 0
indiv<-data.frame(b.day,b.temp,b.precip,b.cutemp,b.cuprecip,b.daysq,b.tempsq,b.precipsq,b.cutempsq,b.cuprecipsq)
# create "empty" individual
traits="cutemp"
b.traits=sprintf("b.%s",traits)  # list of traits in b.day format
indiv[,b.traits]=testpts #fill in the values for the traits we're actually using
yrfit=matrix(0,nrow=length(years.list),ncol=length(testpts)) #initialize vector for storing yearly fitness
for(i in 1:length(years.list)){ #iterate through all years, calculate fitness for each
yrfit[i,]=fitness(year=years.list[[i]],newpop=indiv,duration=duration,traits=traits)$fit
}
geofit=apply(log(yrfit),2,sum)
return(geofit)
# return(c(geofit=max(geofit),b.temp=testpts[geofit==max(geofit)][1]))
}
opt.cutemp=opt_cutemp(years.list)
fit.cutemp=fit_cutemp(years.list)
opt.cutemp-fit.cutemp
source('G:/Repos/phenology-cues/scripts/var_exper/prepstuff.R', encoding = 'UTF-8')
#Now confirming that the prepstuff version works:
official.temp=opt_temp(years.list)
opt.temp2=opt_temp2(years.list)
fit.temp=fit_temp(years.list)
fit.temp-opt.temp2
official.temp-geofit.new
#Doesn't work!
opt.temp2-geofit.new
opt.cutemp=opt_cutemp(years.list)
fit.cutemp=fit_cutemp(years.list)
opt.cutemp-fit.cutemp
#########
opt.cutemp
runFile="opt3-2yr_comp1listlist.R"
set_wrkdir<-function(){
#function for setting working directory to the right place given the current computer/user
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin" || Sys.getenv("USERNAME")=="Collin.work"){ #If it's collin
if(Sys.info()["nodename"]=="DESKTOP-D6QSU8F"){
setwd("G:\\Repos\\phenology-cues") #desktop
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #laptop
}
}
set_wrkdir()
# source("scripts/var_exper/fig1_calculator_opt_comp.R")
source("scripts/var_exper/fig1_calculator_opt_comp.R")
tempPath=getwd()
set_wrkdir()
file.copy(from=paste("scripts/var_exper/runfiles/",runFile,sep = ""),
to=paste(tempPath,"/pars-version-",runFile,sep="")
)
set_wrkdir()
setwd("results/fig1/opt3-2yr-comp1listlist")
load("fig1dat-versionopt3-2yr-comp1listlist.Rdata",envir=opt<-new.env())
opt.varmeans=opt$overall.res[order(opt$overall.res$yearstd,opt$overall.res$daystd,opt$overall.res$trait),]
set_wrkdir()
setwd("results/fig1/compare3-2yr")
load("fig1dat-versioncompare3-2yr.Rdata",envir=brute<-new.env())
overall.res=brute$overall.res
oldtrait=aggregate(as.numeric(overall.res$traitval),
by=list(daystd=as.factor(overall.res$daystd),
yearstd=as.factor(overall.res$yearstd),
trait=overall.res$trait),
FUN=mean)
oldtrait=oldtrait$x
# varmeans=aggregate(as.numeric(overall.res$geofit),
setwd("G:/Repos/phenology-cues/results/fig1/opt3-2yr-comp1listlist")
load("fig1dat-versionopt3-2yr-comp1listlist.Rdata",envir=opt<-new.env())
opt.varmeans=opt$overall.res[order(opt$overall.res$yearstd,opt$overall.res$daystd,opt$overall.res$trait),]
setwd("G:/Repos/phenology-cues/results/fig1/compare3-2yr")
load("fig1dat-versioncompare3-2yr.Rdata",envir=brute<-new.env())
overall.res=brute$overall.res
varmeans=aggregate(as.numeric(overall.res$geofit),
by=list(daystd=as.factor(overall.res$daystd),
yearstd=as.factor(overall.res$yearstd),
trait=overall.res$trait),
FUN=mean)
varmeans$yearstd=as.numeric(as.character(varmeans$yearstd))
varmeans$daystd=as.numeric(as.character(varmeans$daystd))
varmeans$x=as.numeric(as.character(varmeans$x))
varpts=unique(varmeans[,c("daystd","yearstd")])
varmeans=cbind(varmeans,oldtrait)
varmeans=varmeans[order(varmeans$yearstd,varmeans$daystd,varmeans$trait),]
brute$varmeans=varmeans
varcompare=cbind(varmeans, opt.varmeans[,c("geofit","traitval")])
names(varcompare)[4:7]=c("geofit.old","traital.old","geofit.new","traitval.new")
varcompare=cbind(varcompare,res.diff=varcompare$geofit.old+varcompare$geofit.new)
varcompare$geofit.old=-varcompare$geofit.old
varcompare=cbind(varcompare,frac.diff=varcompare$res.diff/mean(varcompare$geofit.old+varcompare$geofit.new))
names(varcompare)[9]="frac.diff"
set_wrkdir()
save(varcompare,file="varCompare_2yr.Rdata")
varcompare
varcompare[varcompare$frac.diff<0,]
varcompare[varcompare$frac.diff>0,]
varcompare[varcompare$frac.diff<0,]
runFile="test_500yr.R"
set_wrkdir<-function(){
#function for setting working directory to the right place given the current computer/user
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin" || Sys.getenv("USERNAME")=="Collin.work"){ #If it's collin
if(Sys.info()["nodename"]=="DESKTOP-D6QSU8F"){
setwd("G:\\Repos\\phenology-cues") #desktop
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #laptop
}
}
set_wrkdir()
# source("scripts/var_exper/fig1_calculator_opt_comp.R")
source("scripts/var_exper/fig1_calculator_opt.R")
tempPath=getwd()
set_wrkdir()
file.copy(from=paste("scripts/var_exper/runfiles/",runFile,sep = ""),
to=paste(tempPath,"/pars-version-",runFile,sep="")
)
runFile="test_500yr.R"
set_wrkdir<-function(){
#function for setting working directory to the right place given the current computer/user
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin" || Sys.getenv("USERNAME")=="Collin.work"){ #If it's collin
if(Sys.info()["nodename"]=="DESKTOP-D6QSU8F"){
setwd("G:\\Repos\\phenology-cues") #desktop
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #laptop
}
}
set_wrkdir()
# source("scripts/var_exper/fig1_calculator_opt_comp.R")
source("scripts/var_exper/fig1_calculator_opt.R")
tempPath=getwd()
set_wrkdir()
file.copy(from=paste("scripts/var_exper/runfiles/",runFile,sep = ""),
to=paste(tempPath,"/pars-version-",runFile,sep="")
)
#For comparison with opt1-10yr
#Run parameters
fitfile="standgauss" #Fitness function to use. Currently only one defined is standgauss
locName="davis" #Which location's data to use. CUrrently only tested on davis
traits=traitslist=c("day","temp","cutemp") #which traits to compare
runnum="test-1000yrlong" #Name for saving the results
#Climate parameters
yearstdMax=20 #max year variation to test
daystdMax=5 #max day variation to test
numpts=15#number of year and day variation levels to test.
numYears=1000 #number of years of climate to generate
actprecip=FALSE #If false, set all precips to zero. If true, use the smoothed precip values
#Organism parameters
lag=1 #number of days of lag between orgs deciding to emerge and them collecting fitness.
duration=10 #number of days organisms are emerged and collecting fitness
baseTempQ=10 #quantile of temperature to use for "base temp". Applied to the MEAN YEAR temperatures.
#Optimization
pointcheck=1000 #total number of points to check in initial pass
fastnum=20 #number of the best points from pointcheck pass to do a fast optimization on
slownum=10 #number of the best points from fastnum pass to do a slow optimization on
warnings()
runFile="test_longyr.R"
set_wrkdir<-function(){
#function for setting working directory to the right place given the current computer/user
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin" || Sys.getenv("USERNAME")=="Collin.work"){ #If it's collin
if(Sys.info()["nodename"]=="DESKTOP-D6QSU8F"){
setwd("G:\\Repos\\phenology-cues") #desktop
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #laptop
}
}
set_wrkdir()
# source("scripts/var_exper/fig1_calculator_opt_comp.R")
source("scripts/var_exper/fig1_calculator_opt.R")
tempPath=getwd()
set_wrkdir()
file.copy(from=paste("scripts/var_exper/runfiles/",runFile,sep = ""),
to=paste(tempPath,"/pars-version-",runFile,sep="")
)
runFile="test_longyr.R"
set_wrkdir<-function(){
#function for setting working directory to the right place given the current computer/user
if(Sys.getenv("USERNAME")=="Collin" || Sys.getenv("USERNAME")=="collin" || Sys.getenv("USERNAME")=="Collin.work"){ #If it's collin
if(Sys.info()["nodename"]=="DESKTOP-D6QSU8F"){
setwd("G:\\Repos\\phenology-cues") #desktop
}else{
setwd("C:\\Repos\\phenology-cues") #desktop
}
}else{
if(Sys.getenv("COMPUTERNAME")=="ENT-YANG01"){
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")#desktop
}else{
setwd("C:\\Users\\louie\\Documents\\GitHub\\phenology-cues")} #laptop
}
}
set_wrkdir()
# source("scripts/var_exper/fig1_calculator_opt_comp.R")
source("scripts/var_exper/fig1_calculator_opt.R")
tempPath=getwd()
set_wrkdir()
file.copy(from=paste("scripts/var_exper/runfiles/",runFile,sep = ""),
to=paste(tempPath,"/pars-version-",runFile,sep="")
)
